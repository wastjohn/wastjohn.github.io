[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Will St. John",
    "section": "",
    "text": "He/Him/His\nUndergraduate Physics & Astronomy Student | Macalester College\n\n\nMassanutten Regional Governor’s School  2020-2022 | Mt. Jackson, VA\nEast Rockingham High School  2018-2022 | Elkton, VA"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Research",
    "section": "",
    "text": "Here is some text about my research.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\nPresentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExploring Hidden Nuclei in Nearby Galaxies\n\n\n\nOptical Astronomy\n\n\nJWST\n\n\nHST\n\n\nPython\n\n\nSAOImage DS9\n\n\nIn progress\n\n\n\n\n\n\n\n\n\n\nJan 24, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMapping the HI in Newly-Discovered, GBT-Confirmed Local Volume Dwarf Galaxies\n\n\n\nRadio Astronomy\n\n\nGBT\n\n\nInternational Collegues\n\n\nIn progress\n\n\n\n\n\n\n\n\n\n\nJan 24, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFundamental Astrophysics at Low Metallicity: Leo P\n\n\n\nRadio Astronomy\n\n\nVLA\n\n\nPython\n\n\nCASA\n\n\nIn progress\n\n\n\n\n\n\n\n\n\n\nJan 24, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npyScope: Optical Telescope Automation with Python\n\n\n\nOptical Astronomy\n\n\nPython\n\n\nIn progress\n\n\n\n\n\n\n\n\n\n\nJan 24, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTURBO: Total-coverage Ultra-fast Response to Binary Mergers Observatory\n\n\n\nGravitational Waves\n\n\nOptical Astronomy\n\n\nPython\n\n\nSQL\n\n\nHTML/CSS\n\n\nIn progress\n\n\n\n\n\n\n\n\n\n\nJan 24, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnalysis of the Optical Spectra of H2O Megamaser Emissions\n\n\n\nOptical Astronomy\n\n\nGBT\n\n\nPython\n\n\nSQL\n\n\nPast Project\n\n\n\n\n\n\n\n\n\n\nJun 1, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Resume",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "research/LeoP/index.html",
    "href": "research/LeoP/index.html",
    "title": "Fundamental Astrophysics at Low Metallicity: Leo P",
    "section": "",
    "text": "Fundamental Astrophysics at Low Metallicity: Leo P, Macalester College (Summer 2023 - Present) – [Description of research]\n\nResearch advisor: Dr. John Cannon (Macalester Physics and Astronomy Department)\nScheduled to present findings at upcoming American Astronomical Society meeting in Summer 2024"
  },
  {
    "objectID": "research/GBT-ConfirmedLocalVolumeDwarfGalaxies/index.html",
    "href": "research/GBT-ConfirmedLocalVolumeDwarfGalaxies/index.html",
    "title": "Mapping the HI in Newly-Discovered, GBT-Confirmed Local Volume Dwarf Galaxies",
    "section": "",
    "text": "Mapping the HI in Newly-Discovered, GBT-Confirmed Local Volume Dwarf Galaxies, Macalester College (Summer 2023 - Present) – [Description of research]\n\nResearch advisor: Dr. John Cannon\nAdditional research members:"
  },
  {
    "objectID": "research/CONs/index.html",
    "href": "research/CONs/index.html",
    "title": "Exploring Hidden Nuclei in Nearby Galaxies",
    "section": "",
    "text": "Exploring Hidden Nuclei in Nearby Galaxies, Macalester College (Fall 2023 - Present) – [Description of research]\n\nResearch advisor: Dr. John (Jay) Gallagher III (Visiting Astronomy Professor, Macalester College & Emeritus Professor of Astronomy, U. Wisconsin-Madison)\nScheduled to present findings at upcoming American Astronomical Society meeting in Summer 2024"
  },
  {
    "objectID": "research/H2OMegamasers/index.html",
    "href": "research/H2OMegamasers/index.html",
    "title": "Analysis of the Optical Spectra of H2O Megamaser Emissions",
    "section": "",
    "text": "At Massanutten Regional Governor’s School (MRGS), students take a research course where they are given the opportunnity to work with outside mentors. I was fortunate enough to be able to work with Dr. Anca Constantin, a professor in JMU’s Physics and Astronomy Department, during my two years at MRGS.\nThe goal of our project was to learn more about water megamasers by examining the optical spectra of a large dataset of confirmed megamasers. This was done by crossmatching a catalog of known megamasers, provided by the Megamaser Cosmology Project (MCP), with the Sloan Digital Sky Survey (SDSS). Python was used for data manipulation and visualization. SQL was used for data filtering in the SDSS. If interested, you can download a copy of my end-of-year/ISEF presentation.\n\nAt the end of my senior year, this project was entered into the Shenandoah Valley Regional Science Fair, where it won first place in its division, allowing it to be entered into the Virginia State Science and Engineering Fair. It was also a finalist project in the 2022 International Science and Engineering Fair. Here is the link to the ISEF abstract.\nThis was my first hands-on experience working with Python, SQL, and astronomy research in general. I am incredibly thankful for Dr. Constantin for the opportunnity to work with her, and for Mr. Russel Kohrs and Ms. Jennifer Moyers of MRGS for advising me on this two-year project."
  },
  {
    "objectID": "index.html#brianna-heggeseth",
    "href": "index.html#brianna-heggeseth",
    "title": "Will St. John",
    "section": "",
    "text": "Pronunciation  she/her/hers\nUndergraduate Physics and Astronomy Student  MSCS Department @ Macalester College\n\n\nAssociate Professor of Statistics 2020-present | Macalester College\nAssistant Professor of Statistics 2018-2020 | Macalester College\nAssistant Professor of Statistics 2013-2018 | Williams College\n\n\n\nPhD in Statistics 2013 | University of California Berkeley\nBA in Math with Statistics concentration 2008 | Saint Olaf College"
  },
  {
    "objectID": "index.html#will-st.-john",
    "href": "index.html#will-st.-john",
    "title": "Will St. John",
    "section": "",
    "text": "He/Him/His\nUndergraduate Physics & Astronomy Student | Macalester College\n\n\nMassanutten Regional Governor’s School  2020-2022 | Mt. Jackson, VA\nEast Rockingham High School  2018-2022 | Elkton, VA"
  },
  {
    "objectID": "research/pyScope/index.html",
    "href": "research/pyScope/index.html",
    "title": "pyScope: Optical Telescope Automation with Python",
    "section": "",
    "text": "Python programming"
  },
  {
    "objectID": "research/TUBRO/index.html",
    "href": "research/TUBRO/index.html",
    "title": "TURBO: Total-coverage Ultra-fast Response to Binary Mergers Observatory",
    "section": "",
    "text": "Python programming"
  },
  {
    "objectID": "courses.html",
    "href": "courses.html",
    "title": "Courses",
    "section": "",
    "text": "Title\n\n\n\n\n\n\nAstrophysics\n\n\n\n\nAstrophysics Exam 1 Revision\n\n\n\n\nAstrophysics Exam 2 Revision\n\n\n\n\nAstrophysics PS1\n\n\n\n\nAstrophysics PS11\n\n\n\n\nAstrophysics PS11\n\n\n\n\nAstrophysics PS12\n\n\n\n\nAstrophysics PS13\n\n\n\n\nAstrophysics PS14\n\n\n\n\nAstrophysics PS15\n\n\n\n\nAstrophysics PS16\n\n\n\n\nAstrophysics PS2\n\n\n\n\nAstrophysics PS3\n\n\n\n\nAstrophysics PS4\n\n\n\n\nAstrophysics PS5\n\n\n\n\nAstrophysics PS6\n\n\n\n\nAstrophysics PS7\n\n\n\n\nAstrophysics PS9\n\n\n\n\nMachine Learning Notes - Adapted from Macalester’s STAT 253 SP25 Course by Brianna Heggeseth\n\n\n\n\nTopology\n\n\n\n\nTopology\n\n\n\n\nTopology Final Project\n\n\n\n\n \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "courses/ML/index.html",
    "href": "courses/ML/index.html",
    "title": "Machine Learning Notes - Adapted from Macalester’s STAT 253 SP25 Course by Brianna Heggeseth",
    "section": "",
    "text": "Machine Learning: using algorithms that can learn from existing patterns and make predictions\n\n\n\nSupervised Learning\n\nmodel relationship between input \\(x = (x_1, x_2, \\cdots, x_p)\\) and output \\(y\\).\n\n\\[\\begin{align*}y &= f(x) + \\epsilon \\\\ &= \\text{ trend in relationship } + \\text{ residual deviation from trend }\\end{align*}\\]\n\nTypes:\n\nRegression (\\(y\\) is quantitative)\nClassification (\\(y\\) is categorical)\n\n\nUnsupervised Learning\n\nNo output variable\nGoal is to use \\(x\\) to understand/modify strucutre of data with respect to \\(x\\)\nTypes:\n\nClustering (similar \\(x\\)’s’)\nDimension Reduction (turn original set of \\(p\\) input varaibles into set with \\(k&lt;p\\) variables)"
  },
  {
    "objectID": "courses/ML/index.html#supervised-vs-unsupervised-learning",
    "href": "courses/ML/index.html#supervised-vs-unsupervised-learning",
    "title": "Machine Learning Notes - Adapted from Macalester’s STAT 253 SP25 Course by Brianna Heggeseth",
    "section": "",
    "text": "Supervised Learning\n\nmodel relationship between input \\(x = (x_1, x_2, \\cdots, x_p)\\) and output \\(y\\).\n\n\\[\\begin{align*}y &= f(x) + \\epsilon \\\\ &= \\text{ trend in relationship } + \\text{ residual deviation from trend }\\end{align*}\\]\n\nTypes:\n\nRegression (\\(y\\) is quantitative)\nClassification (\\(y\\) is categorical)\n\n\nUnsupervised Learning\n\nNo output variable\nGoal is to use \\(x\\) to understand/modify strucutre of data with respect to \\(x\\)\nTypes:\n\nClustering (similar \\(x\\)’s’)\nDimension Reduction (turn original set of \\(p\\) input varaibles into set with \\(k&lt;p\\) variables)"
  },
  {
    "objectID": "courses/astrophysics/PS1.html",
    "href": "courses/astrophysics/PS1.html",
    "title": "Astrophysics PS1",
    "section": "",
    "text": "Problem 1\nFor Winer Observatory,\n\nFind the altutude of the Sun along the meridian on the first day of summer and\n\n\nAnswer: The first day of summer is the corresponds to the summer solstice, at which the Sun is at a declination of around 23.5 degrees. Winer observatory is located at a latitude of 31.67 degrees. The following diagram can be made for an observer at Winer.\n\nFrom this geometry, we can construct the following relationship between the zenith \\(z\\), declination \\(\\delta\\), and altitude \\(A\\)\n\\[A = 90 - z + \\delta\\]\nUsing this equation, we can plug in the zenith/latitude of Winer and the declination of the Sun at the summer solstice to find the altitude of the Sun at Winer on the summer solstice.\n\\[ A = 90 - 31.67 + 23.5 = \\boxed{81.83 \\text{ deg}} \\]\n\n\nthe maximum altidue of the sun on the first day of winter.\n\n\nAnswer: Using the equation above, we can plug in the declination of the Sun on the winter solstice (-23.5 degrees) to solve for the altitude from Winer.\n\\[ A = 90 - 31.67 - 23.5 = \\boxed{34.83 \\text{ deg}} \\]\n\n\nHow do you expect these altitudes to change for an observer at Macalester?\n\n\nAnswer: Macalester is at a higher latitude, so we would expect the respective altitudes to be lower. Using the nifty equation we found early, we can find how much lower exactly.\nFor some target at Winer, the altitude is\n\\[A_w = 90 - z_w + \\delta \\]\nFor the same target at Mac, the altitude is\n\\[A_m = 90 - z_m + \\delta\\]\nThus, the difference between altitudes at Mac and Winer is\n\\[A_m - A_w = z_w - z_m = 31.67 - 45 = -13.33\\]\nand\n\\[\\boxed{A_m = A_w - 13.33}\\]\nSo the altitudes at Mac are 13.33 degrees lower than the altitudes at Winer.\n\n\n\nProblem 2\nCongratulations! You’ve been awarded 4 hours of observing time on the Subaru Telescope on Manua Kea on March 18 (yay, spring break trip to Hawaii!).\n\nWhat is the Subaru telescope? What portions of the electromagnetic spectrum will you observe in?\n\n\nAnswer: The Subaru telescope is an 8.2 meter optical and near infrared telescope located near the summit of Maunakea, Hawaii, operated by the National Astronomical Observatory of Japan (NAOJ), National Institutes of Natural Sciences. We could abserve in visible and near infrared portions of the electromagnetic spectrum.\n\n\nOf the following objects, which will you be able to observe if your time starts at 10:00 PM? NGC 13, NGC 2213, NGC 3019, NGC 4214, NGC 5808, NGC 6680, NGC 7111. You may find the NASA/IPAC Extragalactic Database (aka NED, https://ned.ipac.caltech.edu/) helpful.\n\n\nAnswer: Below is a table of target names and coordinates.\n\nTarget list\n\n\nname\n\\(\\alpha\\) [deg]\n\\(\\delta\\) [deg]\n\n\n\n\nNGC 13\n2.1987\n33.4333\n\n\nNGC 2213\n92.6753\n-71.5286\n\n\nNGC 3019\n147.5299\n12.7461\n\n\nNGC 4214\n183.9132\n36.3269\n\n\nNGC 5808\n223.5115\n73.1317\n\n\nNGC 6680\n279.9332\n22.3165\n\n\nNGC 7111\n325.4739\n-6.7088\n\n\n\nMarch 18th is nearly the vernal equinox, which means the Sun will have a right ascension around 0 deg. Thus, we can consider the bad range of \\(\\alpha\\) values to be 270-90 deg and the good range of \\(\\alpha\\) values to be 90-270 deg. This allows us to get rid of NGC 13, NGC 6680, and NGC 7111 due to their \\(\\alpha\\) values near the Sun.\nWe can also get rid of NGC 2213, as it has a declination of -71 degrees, which is unobservable from the Subaru telescope given its latitude of 19.8255 degrees North (19.8255 - 90 = -70 = minimum declination for possible observation).\n\nRevised target list\n\n\nname\n\\(\\alpha\\) [deg]\n\\(\\delta\\) [deg]\n\n\n\n\nNGC 3019\n147.5299\n12.7461\n\n\nNGC 4214\n183.9132\n36.3269\n\n\nNGC 5808\n223.5115\n73.1317\n\n\n\nSince we are near the vernal equinox, at noon we expect the Sun to be directly overhead, making the LST around 0 hours. At midnight, we expect the LST to be around 12. Thus two hours earlier, when our observation block starts, we expect to have an LST of around 10. We know the following relation.\n\\[HA = LST - \\alpha\\]\nIf we convert our \\(\\alpha\\)’s to hours from degrees, we can solve for the hour angles of each target to determine if we can see them in our observing block.\n\\[HA = 10 - \\begin{pmatrix}9.8 \\\\ 12.2 \\\\ 14.9\\end{pmatrix} = \\begin{pmatrix}0.2 \\\\ -2.2 \\\\ -4.9\\end{pmatrix}\\]\nIn other words, at 10 pm local time at the Subaru Telescope, NGC 3019 will be almost directly overhead; two hours later, NGC 4214 will be transiting; and at the end of our session, NGC 5808 will be rising/an hour away from transiting.\n\n\n\nProblem 3\nUse Simbad (https://simbad.cds.unistra.fr/simbad/) to look up the parallax and J2000 coordinates to the three brightest stars in the constellation Orion’s belt: Alnilam, Alnitak, and Mintaka.\n\nWhat can you learn about the motion of these stars on Simbad\n\n\nAnswer: Alnilam is moving at 1.44 and -0.78 milliarcseconds/year in right ascension and declination, respectively, and away from us at 27.30 km/s. Alnitak is moving at 3.19 and 2.03 milliarcseconds/year in right ascension and declination, respectively, and away from us at 18.50 km/s. Mintaka is moving at 0.65 and -0.69 milliarcseconds/year in right ascension and declination, respectively, and away from us at 18.50 km/s.\n\n\nWhat are the distances to the stars in parsecs?\n\n\nAnswer: According to Simbad, the parallax of these stars is the following\n\n\n\nname\nparallax [mas]\n\n\n\n\nAlnilam\n1.65\n\n\nAlnitak\n4.43\n\n\nMintaka\n4.71\n\n\n\nUsing the relation between parallax \\(p\\) and distance \\(d\\),\n\\[d_{pc} = \\frac{1}{p_{arcsec}}\\]\nwe can find the disances for each star to be the following.\n\n\n\nname\nparallax [mas]\ndistances [pc]\n\n\n\n\nAlnilam\n1.65\n606\n\n\nAlnitak\n4.43\n226\n\n\nMintaka\n4.71\n212\n\n\n\n\n\nFor the two stars with the most similar distances, calculate their angular separation and minimum physical separation (assuming they are both at a distance equal to that of the nearest of the two stars).\n\n\nAnswer: Angular separation between two points on the celestial sphere is defined by \\[(\\Delta \\theta)^2 = (\\Delta\\alpha\\cos\\delta)^2 + (\\Delta\\delta)^2\\]\nThe physical separation can be found by the small angle formula, namely\n\\[\\theta_{rad} = \\frac{D}{d}\\]\nThe following code chuck solves for the angular and physical separation given the coordinates of the two stars and the distance to the closest star.\n\n\nimport numpy as np\nimport astropy.units as u\nalnitak = (085.18969443 * u.deg,-01.94257359 * u.deg)\nmintaka = (083.00166706 * u.deg,-00.29909511 * u.deg)\nmintaka_parallax = 4.71 * u.arcsec * 10**-3\nara, adec = alnitak\nmra, mdec = mintaka\ndra = ara - mra\nddec = adec - mdec\n\ntheta = np.sqrt((dra * np.cos(adec))**2 + ddec**2).to(u.rad)\ndistance = mintaka_parallax.to(u.parsec, equivalencies=u.parallax())\nseparation = theta * distance\n\nprint(f\"\"\"Alnitak and Mintaka are separated by {theta.to(u.deg):.2f}, \nwhich corresponds to a physical separation of {separation / u.rad:.2f}\"\"\")\n\nAlnitak and Mintaka are separated by 2.74 deg, \nwhich corresponds to a physical separation of 10.14 pc"
  },
  {
    "objectID": "courses/topology/index.html",
    "href": "courses/topology/index.html",
    "title": "Topology",
    "section": "",
    "text": "Point set\nGeometric\nAlgebraic\nComputational"
  },
  {
    "objectID": "courses/topology/index.html#open-sets",
    "href": "courses/topology/index.html#open-sets",
    "title": "Topology",
    "section": "Open Sets",
    "text": "Open Sets\n\nDefinition: If \\(S\\subset\\mathbb{R}\\) then \\(S\\) is open if \\(\\forall x \\in S \\exists\\) some open interval \\((x-\\delta_x, x+\\delta_x)\\) (where \\(\\delta_x&gt;0\\)) contained within \\(S\\).\n\nNote that \\((x-\\delta_x, x+\\delta_x)\\) is sometimes called an open neighborhood or “breathing space”.\n\nTheorem: \\(\\displaystyle \\bigcup_{}^\\infty opensets = open\\)\nTheorem: \\(\\displaystyle \\bigcap_{}^N opensets = open\\)"
  },
  {
    "objectID": "courses/topology/index.html#closed-sets",
    "href": "courses/topology/index.html#closed-sets",
    "title": "Topology",
    "section": "Closed Sets",
    "text": "Closed Sets\n\nDefinition: A subset \\(S\\subset\\mathbb{R}\\) is closed if its compliment \\(\\mathbb{R}-S\\) is open.\n\n\nTheorem: \\(\\displaystyle \\bigcap_{}^\\infty closedsets = closed\\)\nTheorem: \\(\\displaystyle \\bigcup_{}^N closedsets = closed\\)\n\nNote, open and closed sets are not opposites of each other!"
  },
  {
    "objectID": "courses/topology/index.html#continuity-by-open-sets",
    "href": "courses/topology/index.html#continuity-by-open-sets",
    "title": "Topology",
    "section": "Continuity by Open Sets",
    "text": "Continuity by Open Sets\n\nDefinition: If \\(f:D\\rightarrow C\\) is a function, and \\(S\\) is a subset of \\(C\\), then the primage of \\(S\\) under \\(f\\), written \\(f^{-1}(S)\\), is the subset of \\(D\\) defined by \\[f^{-1}(S) = {x\\in D, f(x)\\in S}\\]\n\nIn other words, the preimage of \\(S\\) consists of all the points which get mapped to \\(S\\) by \\(f\\).\n\nTheorem: Let \\(f:\\mathbb{R}\\rightarrow\\mathbb{R}\\) be a function. If \\(f\\) is continuous, then \\(f^{-1}(S)\\) is open whenever \\(S\\subset\\mathbb{R}\\) is open. And vice versa: If \\(f^{-1}(S)\\) is open whenever \\(S\\) is an open subset of \\(\\mathbb{R}\\), then \\(f\\) is continuous.\n\nNote, continuity also works for closed sets!"
  },
  {
    "objectID": "courses/topology/index.html#constructing-a-topology",
    "href": "courses/topology/index.html#constructing-a-topology",
    "title": "Topology",
    "section": "Constructing a Topology",
    "text": "Constructing a Topology\nYou can construct a topology by satisfying T1-T4 in two different ways.\n\nDefinition: Indiscrete Topology - Call empty set and set \\(S\\) open\nDefinition: Discrete Topology - Take all subsets of \\(S\\) to be open"
  },
  {
    "objectID": "courses/topology/index.html#closed-subset",
    "href": "courses/topology/index.html#closed-subset",
    "title": "Topology",
    "section": "Closed Subset",
    "text": "Closed Subset\n\nDefinition: A subset \\(S\\) of a topological space \\(T\\) is closed if \\(T-S\\) is open."
  },
  {
    "objectID": "courses/topology/index.html#topological-space-and-continutity",
    "href": "courses/topology/index.html#topological-space-and-continutity",
    "title": "Topology",
    "section": "Topological Space and Continutity",
    "text": "Topological Space and Continutity\n\nDefinition: A function/map \\(f:S\\rightarrow T\\) from one topological space to another is continuous if the preimage \\(f^{-1}(Q)\\) of every open set \\(Q\\subset T\\) is an open set in \\(S\\).\nDefinition: If \\(S\\) has discrete topology and \\(T\\) has any topological space, then any function \\(f:S\\rightarrow T\\) is continuous. If \\(T\\) has indiscrete topology and \\(S\\) has any topological space, then any function \\(f:S\\rightarrow T\\) is continuous.\nDefinition: If \\(R\\), \\(S\\), \\(T\\) are topological spaces and \\(f:R\\rightarrow S\\), \\(g:S\\rightarrow T\\) are continuous functions, then \\(g\\circ f:R\\rightarrow T\\) is continuous."
  },
  {
    "objectID": "courses/astrophysics/index.html",
    "href": "courses/astrophysics/index.html",
    "title": "Astrophysics",
    "section": "",
    "text": "Title\n\n\n\n\n\n\nAstrophysics PS1\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "courses/astrophysics/work/PS1.html",
    "href": "courses/astrophysics/work/PS1.html",
    "title": "Astrophysics PS1",
    "section": "",
    "text": "Problem 1\nFor Winer Observatory,\n\nFind the altutude of the Sun along the meridian on the first day of summer and\n\n\nAnswer: The first day of summer is the corresponds to the summer solstice, at which the Sun is at a declination of around 23.5 degrees. Winer observatory is located at a latitude of 31.67 degrees. The following diagram can be made for an observer at Winer.\n\nFrom this geometry, we can construct the following relationship between the zenith \\(z\\), declination \\(\\delta\\), and altitude \\(A\\)\n\\[A = 90 - z + \\delta\\]\nUsing this equation, we can plug in the zenith/latitude of Winer and the declination of the Sun at the summer solstice to find the altitude of the Sun at Winer on the summer solstice.\n\\[ A = 90 - 31.67 + 23.5 = \\boxed{81.83 \\text{ deg}} \\]\n\n\nthe maximum altidue of the sun on the first day of winter.\n\n\nAnswer: Using the equation above, we can plug in the declination of the Sun on the winter solstice (-23.5 degrees) to solve for the altitude from Winer.\n\\[ A = 90 - 31.67 - 23.5 = \\boxed{34.83 \\text{ deg}} \\]\n\n\nHow do you expect these altitudes to change for an observer at Macalester?\n\n\nAnswer: Macalester is at a higher latitude, so we would expect the respective altitudes to be lower. Using the nifty equation we found early, we can find how much lower exactly.\nFor some target at Winer, the altitude is\n\\[A_w = 90 - z_w + \\delta \\]\nFor the same target at Mac, the altitude is\n\\[A_m = 90 - z_m + \\delta\\]\nThus, the difference between altitudes at Mac and Winer is\n\\[A_m - A_w = z_w - z_m = 31.67 - 45 = -13.33\\]\nand\n\\[\\boxed{A_m = A_w - 13.33}\\]\nSo the altitudes at Mac are 13.33 degrees lower than the altitudes at Winer.\n\n\n\nProblem 2\nCongratulations! You’ve been awarded 4 hours of observing time on the Subaru Telescope on Manua Kea on March 18 (yay, spring break trip to Hawaii!).\n\nWhat is the Subaru telescope? What portions of the electromagnetic spectrum will you observe in?\n\n\nAnswer: The Subaru telescope is an 8.2 meter optical and near infrared telescope located near the summit of Maunakea, Hawaii, operated by the National Astronomical Observatory of Japan (NAOJ), National Institutes of Natural Sciences. We could abserve in visible and near infrared portions of the electromagnetic spectrum.\n\n\nOf the following objects, which will you be able to observe if your time starts at 10:00 PM? NGC 13, NGC 2213, NGC 3019, NGC 4214, NGC 5808, NGC 6680, NGC 7111. You may find the NASA/IPAC Extragalactic Database (aka NED, https://ned.ipac.caltech.edu/) helpful.\n\n\nAnswer: Below is a table of target names and coordinates.\n\nTarget list\n\n\nname\n\\(\\alpha\\) [deg]\n\\(\\delta\\) [deg]\n\n\n\n\nNGC 13\n2.1987\n33.4333\n\n\nNGC 2213\n92.6753\n-71.5286\n\n\nNGC 3019\n147.5299\n12.7461\n\n\nNGC 4214\n183.9132\n36.3269\n\n\nNGC 5808\n223.5115\n73.1317\n\n\nNGC 6680\n279.9332\n22.3165\n\n\nNGC 7111\n325.4739\n-6.7088\n\n\n\nMarch 18th is nearly the vernal equinox, which means the Sun will have a right ascension around 0 deg. Thus, we can consider the bad range of \\(\\alpha\\) values to be 270-90 deg and the good range of \\(\\alpha\\) values to be 90-270 deg. This allows us to get rid of NGC 13, NGC 6680, and NGC 7111 due to their \\(\\alpha\\) values near the Sun.\nWe can also get rid of NGC 2213, as it has a declination of -71 degrees, which is unobservable from the Subaru telescope given its latitude of 19.8255 degrees North (19.8255 - 90 = -70 = minimum declination for possible observation).\n\nRevised target list\n\n\nname\n\\(\\alpha\\) [deg]\n\\(\\delta\\) [deg]\n\n\n\n\nNGC 3019\n147.5299\n12.7461\n\n\nNGC 4214\n183.9132\n36.3269\n\n\nNGC 5808\n223.5115\n73.1317\n\n\n\nSince we are near the vernal equinox, at noon we expect the Sun to be directly overhead, making the LST around 0 hours. At midnight, we expect the LST to be around 12. Thus two hours earlier, when our observation block starts, we expect to have an LST of around 10. We know the following relation.\n\\[HA = LST - \\alpha\\]\nIf we convert our \\(\\alpha\\)’s to hours from degrees, we can solve for the hour angles of each target to determine if we can see them in our observing block.\n\\[HA = 10 - \\begin{pmatrix}9.8 \\\\ 12.2 \\\\ 14.9\\end{pmatrix} = \\begin{pmatrix}0.2 \\\\ -2.2 \\\\ -4.9\\end{pmatrix}\\]\nIn other words, at 10 pm local time at the Subaru Telescope, NGC 3019 will be almost directly overhead; two hours later, NGC 4214 will be transiting; and at the end of our session, NGC 5808 will be rising/an hour away from transiting.\n\n\n\nProblem 3\nUse Simbad (https://simbad.cds.unistra.fr/simbad/) to look up the parallax and J2000 coordinates to the three brightest stars in the constellation Orion’s belt: Alnilam, Alnitak, and Mintaka.\n\nWhat can you learn about the motion of these stars on Simbad\n\n\nAnswer: Alnilam is moving at 1.44 and -0.78 milliarcseconds/year in right ascension and declination, respectively, and away from us at 27.30 km/s. Alnitak is moving at 3.19 and 2.03 milliarcseconds/year in right ascension and declination, respectively, and away from us at 18.50 km/s. Mintaka is moving at 0.65 and -0.69 milliarcseconds/year in right ascension and declination, respectively, and away from us at 18.50 km/s.\n\n\nWhat are the distances to the stars in parsecs?\n\n\nAnswer: According to Simbad, the parallax of these stars is the following\n\n\n\nname\nparallax [mas]\n\n\n\n\nAlnilam\n1.65\n\n\nAlnitak\n4.43\n\n\nMintaka\n4.71\n\n\n\nUsing the relation between parallax \\(p\\) and distance \\(d\\),\n\\[d_{pc} = \\frac{1}{p_{arcsec}}\\]\nwe can find the disances for each star to be the following.\n\n\n\nname\nparallax [mas]\ndistances [pc]\n\n\n\n\nAlnilam\n1.65\n606\n\n\nAlnitak\n4.43\n226\n\n\nMintaka\n4.71\n212\n\n\n\n\n\nFor the two stars with the most similar distances, calculate their angular separation and minimum physical separation (assuming they are both at a distance equal to that of the nearest of the two stars).\n\n\nAnswer: Angular separation between two points on the celestial sphere is defined by \\[(\\Delta \\theta)^2 = (\\Delta\\alpha\\cos\\delta)^2 + (\\Delta\\delta)^2\\]\nThe physical separation can be found by the small angle formula, namely\n\\[\\theta_{rad} = \\frac{D}{d}\\]\nThe following code chuck solves for the angular and physical separation given the coordinates of the two stars and the distance to the closest star.\n\n\nimport numpy as np\nimport astropy.units as u\nalnitak = (085.18969443 * u.deg,-01.94257359 * u.deg)\nmintaka = (083.00166706 * u.deg,-00.29909511 * u.deg)\nmintaka_parallax = 4.71 * u.arcsec * 10**-3\nara, adec = alnitak\nmra, mdec = mintaka\ndra = ara - mra\nddec = adec - mdec\n\ntheta = np.sqrt((dra * np.cos(adec))**2 + ddec**2).to(u.rad)\ndistance = mintaka_parallax.to(u.parsec, equivalencies=u.parallax())\nseparation = theta * distance\n\nprint(f\"\"\"Alnitak and Mintaka are separated by {theta.to(u.deg):.2f}, \nwhich corresponds to a physical separation of {separation / u.rad:.2f}\"\"\")\n\nAlnitak and Mintaka are separated by 2.74 deg, \nwhich corresponds to a physical separation of 10.14 pc"
  },
  {
    "objectID": "courses/astrophysics/PS2.html",
    "href": "courses/astrophysics/PS2.html",
    "title": "Astrophysics PS2",
    "section": "",
    "text": "Problem 1\nConsider the extrasolar planet system known as TRAPPIST-1 (the system with the most Earth-size habitable zone planets!). Refer to https://arxiv.org/abs/1703.01424 for relevant orbital parameters. Rank the orbital angular momentum of each planet from highest to lowest. Before you do any calculations take a stab at the ranking using your intuition and the derived equation. Compare your guess to the final ranking. Any surprises?\n\nAnswer: For our intuition approach, looking at the angular momention equation\n\\[L = \\mu\\sqrt{GMa(1-e^2)}\\]\nallows us to make some simplifications given our system’s properties. For starters, the system mass \\(M\\) is approximately the same for all orbits due to the mass of the star in comparison to the exoplanets. Additionally, the constant \\(G\\) will not change for each system. If we consider the reduced mass \\(mu\\), we can make the following simplification for a system with a very large (\\(m_1\\)) and very small mass (\\(m_2\\)).\n\\[\\mu = \\frac{m_1 m_2}{m_1 + m_2} \\approx \\frac{m_1 m_2}{m_1} = m_2\\]\nThus, the primary characteristics for determining the angular momentum, by intuition, is the mass of the exoplanet, the semi-major axis, and the eccentricity.\n$$\\(L \\sim m_2 \\sqrt{a(1-e^2)}\\)\nUsing the values given in the paper, we predict the following.\n\ng (largest L)\nc\nb\nf\ne\nd (smallest L)\n\nChecking our values with a calculation…\n\n\nimport astropy.units as u\nimport astropy.constants as c\n\nstar_m = 0.0802 * c.M_sun\n\ndef L(m, a, e):\n    return ((star_m * m)/(star_m + m)) * (c.G * (star_m + m) * a * (1 - e**2)) ** 0.5\n\n# m, a, e\ntrappist_b = [0.85 * c.M_earth, 11.11 * u.au * 10 ** -3, 0.081]\ntrappist_c = [1.38 * c.M_earth, 15.21 * u.au * 10 ** -3, 0.083]\ntrappist_d = [0.41 * c.M_earth, 21.44 * u.au * 10 ** -3, 0.070]\ntrappist_e = [0.62 * c.M_earth, 28.17 * u.au * 10 ** -3, 0.085]\ntrappist_f = [0.68 * c.M_earth, 37.1 * u.au * 10 ** -3, 0.063]\ntrappist_g = [1.34 * c.M_earth, 45.1 * u.au * 10 ** -3, 0.061]\n\nlb = L(trappist_b[0], trappist_b[1], trappist_b[2]).to(u.kg * u.m ** 2 / u.s)\nlc = L(trappist_c[0], trappist_c[1], trappist_c[2]).to(u.kg * u.m ** 2 / u.s)\nld = L(trappist_d[0], trappist_d[1], trappist_d[2]).to(u.kg * u.m ** 2 / u.s)\nle = L(trappist_e[0], trappist_e[1], trappist_e[2]).to(u.kg * u.m ** 2 / u.s)\nlf = L(trappist_f[0], trappist_f[1], trappist_f[2]).to(u.kg * u.m ** 2 / u.s)\nlg = L(trappist_g[0], trappist_g[1], trappist_g[2]).to(u.kg * u.m ** 2 / u.s)\n\nprint(f\"L trappist b: {lb:.2e}\")\nprint(f\"L trappist c: {lc:.2e}\")\nprint(f\"L trappist d: {ld:.2e}\")\nprint(f\"L trappist e: {le:.2e}\")\nprint(f\"L trappist f: {lf:.2e}\")\nprint(f\"L trappist g: {lg:.2e}\")\n\nL trappist b: 6.73e+38 m2 kg / s\nL trappist c: 1.28e+39 m2 kg / s\nL trappist d: 4.51e+38 m2 kg / s\nL trappist e: 7.81e+38 m2 kg / s\nL trappist f: 9.85e+38 m2 kg / s\nL trappist g: 2.14e+39 m2 kg / s\n\n\n\nwe get agreement with the largest and smallest values,\n\ng (largest L)\nc\nf\ne\nb\nd (smallest L)\n\nwhich is relatively expected for a simple intution guess with no calculations.\n\n\n\nProblem 2\nComet C/2013 A1 (Siding Spring) was discovered in January 2013. Refer to https://arxiv.org/abs/2012.12172 for relevant orbital parameters. Calculate the following five orbital properties: orbital period, perihelion distance in AU, aphelion distance in AU, perihelion velocity in km/s, and aphelion velocity in km/s. You may ignore uncertainties.\n\nAnswer: The equations for orbital period, aphelion, perihelion, aphelion velocity, and perihelion velocity are shown below, respectively.\n\\[P^2 = \\frac{4\\pi^2}{G(m_1 + m_2)}a^3\\] \\[\\text{perihelion} = a - ae\\] \\[\\text{aphelion} = a + ae\\] \\[v_p^2 = \\frac{GM}{a}\\left(\\frac{1+e}{1-e}\\right)\\] \\[v_a^2 = \\frac{GM}{a}\\left(\\frac{1-e}{1+e}\\right)\\]\nUsing the equations above, and the values for \\(a\\), and \\(e\\) in the paper provided (in addition to some constants), we can solve for the five orbital properties listed earlier.\n\n\nimport math\na = 2.590376582621090E4 * u.au\ne = 0.9999458751571103\n\nP = ((4 * math.pi ** 2) * a ** 3 / (c.G * c.M_sun)) ** 0.5\nperihelion = a - a * e\naphelion = a + a * e\nv_p = (c.G * c.M_sun * ((1 + e)/(1 - e)) / a) ** 0.5\nv_a = (c.G * c.M_sun * ((1 - e)/(1 + e)) / a) ** 0.5\n\nprint(f\"Orbital Period: {P.to(u.yr):.2e}\")\nprint(f\"Perihelion: {perihelion.to(u.au):.2e}\")\nprint(f\"Aphelion: {aphelion.to(u.au):.2e}\")\nprint(f\"Perihelion Velocity: {v_p.to(u.km / u.s):.2e}\")\nprint(f\"Aphelion Velocity: {v_a.to(u.km / u.s):.2e}\")\n\nOrbital Period: 4.17e+06 yr\nPerihelion: 1.40e+00 AU\nAphelion: 5.18e+04 AU\nPerihelion Velocity: 3.56e+01 km / s\nAphelion Velocity: 9.63e-04 km / s\n\n\n\n\nProblem 3\nA planet with a mass 33.3 times larger than that of the Earth orbits a 1.7 Solar mass star with an orbital period of 8.88 years. What are the semimajor axis of the orbit (in AU) and the reduced mass (in Solar masses)?\n\nAnswer: Using the equation for orbital period (see above), we can rearrange to solve for the semimajor axis.\n\\[a = \\left(\\frac{P^2 G(m_1 + m_2)}{4\\pi^2}\\right)^{1/3}\\]\nAdditionally, we can solve for the reduced mass using the equation outlined in Problem 1. Using the equations above the values provided, we can write a simple script to solve for the semimajor and reduced mass\n\n\nm1 = 33.3 * c.M_earth\nm2 = 1.7 * c.M_sun\nP = 8.88 * u.yr\n\na = (P ** 2 * c.G * (m1 + m2) / (4 * math.pi ** 2)) ** (1/3)\nmu = ((m1 * m2)/(m1 + m2))\n\nprint(f\"Semimajor axis: {a.to(u.au):.4e}\")\nprint(f\"Reduced mass: {mu.to(u.M_sun):.4e}\")\n\nSemimajor axis: 5.1179e+00 AU\nReduced mass: 1.0001e-04 solMass"
  },
  {
    "objectID": "courses/astrophysics/PS3.html",
    "href": "courses/astrophysics/PS3.html",
    "title": "Astrophysics PS3",
    "section": "",
    "text": "Problem 1\nConsider a model of a subgiant star with a surface temperature 27,000 K and radius 7.4 times as large as the Sun. The parallax measured for the stars is 0.008 arcseconds. Calculate\n\nThe luminosity in solar luminosity\nAbsolute bolometric magnitude\nApparent bolometric magnitude\nDistance modulus\nRadiant flux at the surface of the star\nRadiant flux at the surface of Jupiter\nPeak wavelength of the star’s spectrum\n\n\nAnswer:\n\n\nimport astropy.units as u\nimport astropy.constants as c\nimport math\nimport numpy as np\nT_e = 27000 * u.K\nparallax = 0.008 * u.arcsec\nR = 7.4 * c.R_sun\nm_sun = -27 \nM_sun = 4.74\n\ndistance = parallax.to(u.pc, equivalencies=u.parallax())\n\nsurface_flux = c.sigma_sb * T_e ** 4\nL = 4 * math.pi * R ** 2 * surface_flux\nflux = L / (4 * math.pi * distance ** 2)\nflux_jupiter = L / (4 * math.pi * (5.2 * u.au) ** 2)\nprint(M_sun,c.L_sun.value)\nM = M_sun - 2.5 * math.log10(L / c.L_sun)\nm = M + 5 * math.log10(distance / (10 * u.pc))\nl_max = 0.0029 * u.m * u.K / T_e\n\nprint(f\"Luminosity (L): {L.to(u.L_sun):.2e}\")\nprint(f\"Absolute bolometric magitude (M): {M:.2f}\")\nprint(f\"Relative bolometric magnitude (m): {m:.2f}\")\nprint(f\"Distance modulus (m-M): {m-M:.2f}\")\nprint(f\"Radiant flux at surface of star: {surface_flux:.2e}\")\nprint(f\"Radiant flux at surface of Jupiter: {flux_jupiter.to(u.W / u.m ** 2):.2e}\")\nprint(f\"Peak wavelength (l_max): {l_max.to(u.nm)}\")\n\n4.74 3.828e+26\nLuminosity (L): 2.62e+04 solLum\nAbsolute bolometric magitude (M): -6.31\nRelative bolometric magnitude (m): -0.82\nDistance modulus (m-M): 5.48\nRadiant flux at surface of star: 3.01e+10 W / m2\nRadiant flux at surface of Jupiter: 1.32e+06 W / m2\nPeak wavelength (l_max): 107.40740740740739 nm\n\n\n\n\nProblem 2\nA \\(1.2\\times10^4\\) kg spacecraft is launched from Earth and is to be accelerated radially away from the Sun using a circular solar sail. The initial acceleration of the spacecraft is to be 1g. Assuming a flat sail, determine the radius of the sail if it is\n\nBlack, so it absorbs the Sun’s light.\nShiny, so it reflects the Sun’s light.\nHow does this proposed spacecraft compare to what NASA is considering for it’s next generation of proposed solar sail enabled spacecraft: https://www.nasa.gov/general/nasa-next-generation-solar-sail-boom-technology-ready-for-launch/ Hint: The spacecraft, like Earth, is orbiting the Sun. Should you include the Sun’s gravity in your calculation?\n\n\nAnswer:\n\n\nd = 1 * u.au\nm = 1.2E4 * u.kg\na = 9.8  * u.m / u.s ** 2\ntheta = 0 * u.deg\nflux = c.L_sun / (4 * math.pi * d ** 2)\nr_abs = ((m * a * c.c) / (flux * math.pi * math.cos(0))) ** 0.5\nr_ref = ((m * a * c.c) / (2 * flux * math.pi * math.cos(0)**2)) ** 0.5\nprint(f\"{r_abs.to(u.km):.2f}\")\nprint(f\"{r_ref.to(u.km):.2f}\")\n\n90.80 km\n64.20 km\n\n\n\n\nProblem 3\nWe have discussed the blackbody spectral energy distributions of individual stars. Many studies have examined the relationships between the total stellar mass, luminosity, and observed colors of composite stellar populations (e.g., the millions or billions of stars found in typical galaxies). One such study is Hermann et al. (2016), which studies the properties of low-mass irregular galaxies. This approach is applied in many subsequent works (e.g., Gault et al. 2021). Consider a galaxy with the following measure global properties, measured in the SDSS g and r filters. Information on the SDSS filters can be found here; note that g and g’ filters are interchangeable.\nApparent magnitude in the r band: mr=18.02\nDistance: D = 76 Mpc\nMeasured color: (g - r) = 0.30\nUsing this information, and the M/L relation for the SDSS r-band relation from Herrmann et al. (2016), calculate the following characteristics. You may assume that the absolute magnitude of the Sun in the SDSS r-filter is r = +4.65.\n\nAbsolute magnitude in the r band\nM/L ratio (using Solar units)\nlog10(L/Lsun)\nlog10(M/Msun)\n\n\nAnswer:\n\n\nm_r = 18.02\nD = 76 * u.pc * 1E6\na_lambda = -0.313\nb_lambda = 0.894\ncolor = 0.30\nM_r = m_r - 5 * np.log10(D.value) + 5\nML = 10 ** (a_lambda + b_lambda * color)\nLlog = (M_r - M_sun) / -2.5\nMlog = math.log10(10 ** Llog)\nprint(f\"{10 ** Llog:.2e}\")\nprint(f\"Absolute magnitude in r band: {M_r}\")\nprint(f\"M/L ratio: {ML * u.M_sun / u.L_sun :.2f}\")\nprint(f\"log10(L/Lsun): {Llog}\")\nprint(f\"log10(M/Msun): {Mlog}\")\n\n2.82e+08\nAbsolute magnitude in r band: -16.384067961403954\nM/L ratio: 0.90 solMass / solLum\nlog10(L/Lsun): 8.449627184561582\nlog10(M/Msun): 8.449627184561582"
  },
  {
    "objectID": "courses/astrophysics/PS5.html",
    "href": "courses/astrophysics/PS5.html",
    "title": "Astrophysics PS5",
    "section": "",
    "text": "Problem 1\nConsider the following equations:\n\nv/c &lt; 1 for angles satisfying \\(\\frac{\\frac{v_{app}^2}{c^2} - 1}{\\frac{v_{app}^2}{c^2} + 1} &lt; \\cos\\phi &lt; 1\\)\nThat the smallest possible value for v/c for the source is \\(\\frac{v_{min}}{c} = \\sqrt{\\frac{\\frac{v_{app}^2}{c^2}}{1 + \\frac{v_{app}^2}{c^2}}}\\)\nThe smallest possible v/c will occur at an angle \\(\\phi_{min}\\) such that \\(\\cot\\phi_{min} = \\frac{v_{app}}{c}\\)\nThe Lorentz factor corresponding to the minimum v/c is \\(\\gamma_{min} = \\frac{1}{\\sqrt{1 - \\frac{v_{min}^2}{c^2}}} = \\sqrt{1 + v_{app}^2/c^2} = \\frac{1}{\\sin\\phi_{min}}\\)\n\n\nThe inner 6” of the jet from M87 is observed to have an apparent velocity of 4.5c https://ui.adsabs.harvard.edu/abs/2013ApJ…774L..21M/abstract. Using your newly derived equations, estimate the minimum velocity, minimum approaching angle, and Lorentz factor of the jet.\nPlot \\(\\frac{\\beta_{app}}{c}\\) vs \\(\\phi\\) for a variety of Lorentz factors at the source. Summarize your results to describe how superluminal motion depends on the properties of the source and relative position of the observer.\n\n\\[\\frac{v_{app}}{c} = \\frac{\\frac{v}{c}\\sin\\phi}{1 - \\frac{v}{c}\\cos\\phi}\\]\n\nAnswer: Using the equations provided, we can create a simple Python script to calculate the minimum velocity, minimum approaching angle, and Lorentz factor of the jet.\n\n\nimport astropy.units as u\nimport astropy.constants as c\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nv_app = 4.5 * c.c\nv_min = np.sqrt((v_app / c.c) ** 2 / (1 + (v_app/c.c) ** 2))\ncot_theta_min = v_app / c.c\ntheta_min = np.arctan(1 / cot_theta_min)\ngamma_min = 1 / np.sin(theta_min)\n\nprint(f\"v_min / c: {v_min:.2f}\")\nprint(f\"theta_min: {theta_min.to(u.deg):.2f}\")\nprint(f\"Lorentz factor: {gamma_min:.2f}\")\n\nv_min / c: 0.98\ntheta_min: 12.53 deg\nLorentz factor: 4.61\n\n\n\nBelow is a plot of \\(\\frac{\\beta_{app}}{c}\\) vs \\(\\phi\\) for a variety of Lorentz factors.\n\n\nl = np.linspace(1, 10, 101)\nt_min = np.arcsin(1/l)\nbeta = 1/np.tan(t_min)\n\nplt.scatter(y = beta, x = t_min)\nplt.xlabel(\"Minimum angle [rad]\")\nplt.ylabel(\"V_app / c\")\nplt.show()\n\n\n\n\n\n\n\n\n\nFrom this plot, as the angle approaches zero, indicating a jet directed along the line of site, \\(\\beta\\) approaches infinity. Conversely, as the angle increases, indicating a velocity that is entirely in the perpendicular direction, \\(\\beta\\) approaches zero. Thus, the magnitude of the superluminal motion depends primarily on the inclination angle at which an object is observed, assuming, of course, the object has produced sufficiently rapid motion already.\n\n\n\nProblem 2\nAn astronaut travels on a spaceship to a distant stellar system with a constant velocity at 85% the speed of light.\n\nA radio signal is sent from Earth to the spaceship every 4 months (as measured by a clock on Earth). What is the interval between reception of two signals on the ship?\nA return signal is sent from the ship to the Earth every 4 months (as measured by a clock on the ship). What is the interval between reception of two signals on Earth?\nIf the wavelength of the electromagnetic waves sent from Earth is 17 cm, what wavelength must the receivers on the spaceship must be tuned to receive the waves?\n\n\nAnswer: Problems a) and b) are essentially asking the same question: if an object is moving at relativistic speeds to a stationary observer, how will the interval in reception be affected in the stationary frame of reference. In both cases, we can use the time dilation formula.\nFrom a stationary frame of reference, moving clocks run slow. Thus, in both a) and b), we would expect the interval between receivers to be longer than 4 months. This is a similar argument to the Muon example in the textbook: in the muon’s stationary perspective, it has a short life, but to an external, stationary observer, the muon is moving at relativistic speeds and so the time it is alive is dilated, making the observer measure a longer time than the muon. In our case, the spaceship/earth are moving away from their respective stationary reference frames at relativistic speeds, but each party has agreed to transmit at a specific rate of 1 message every four months. Unfortunately, each receiver experiences the delay in messages as taking longer than 4 months due to the relativistic speeds each transmitter is moving at.\nAdditionally, the spaceship must tune their frequencies to a different wavelenth due to the relativistic motion of the transmitters. The relationship between observed and rest frequency is the following \\[\\nu_{obs} = \\nu_{rest} \\sqrt{\\frac{1-v/c}{1+v/c}}\\]\nNote that the conversion between wavelenth and frequency can be found using the simple relationship \\[c = \\lambda \\nu.\\]\nBelow is code that calculates the results described above.\n\n\n# time dilation\nv = 0.85 * c.c\nt_p = 4\ngamma = 1/np.sqrt(1 - (v/c.c) ** 2)\nt = 4 * gamma\n\n# redshift\nl_rest = 17 * u.cm\nf_rest = c.c / l_rest\nf_obs = f_rest * np.sqrt((1 - v/c.c) / (1 + v/c.c))\nl_obs = c.c / f_obs\n\nprint(f\"Interval between reception of two signals on the ship: {t:.2f} months\")\nprint(f\"Interval between reception of two signals on Earth: {t:.2f} months\")\nprint(f\"Wavelength ship receivers tuned to: {l_obs:.2f}\")\n\nInterval between reception of two signals on the ship: 7.59 months\nInterval between reception of two signals on Earth: 7.59 months\nWavelength ship receivers tuned to: 59.70 cm\n\n\n\n\nProblem 3\nBarnard’s star, named after American astronomer Edward E. Barnard (1857-1923), is an orange star in the constellation Ophiuchus. It has the largest proper motion (\\(\\mu=10.3577\\)” yr\\(^{-1}\\)) and the fourth-largest parallax (p = 0.54901”). In the spectrum of Barnard’s star, the H\\(\\alpha\\) absorption line is observed to have a wavelength of 656.034 nm when measured from the ground.\n\nDetermine the radial velocity of Barnard’s star.\nDetermine the transverse velocity of Barnard’s star.\nCalculate the speed of Barnard’s star through space.\nConsider that the Sun orbits the Milky Way at ~220 km/s, is Barnard’s star traveling particularly fast?\n\n\nAnswer: If we calculate the redshift \\[z = \\frac{\\lambda_{obs} - \\lambda_{rest}}{\\lambda_{rest}}\\] of the H\\(\\alpha\\) absorption line, we can use the following relationship to determine the radial velocity. \\[\\frac{v_r}{c} = \\frac{(z+1)^2 - 1}{(z+1)^2 + 1}\\]\nFor the transverse velocity, we need to multiply the proper motion and the distance to the target (which can be found via parallax), by a conversion factor of 4.74 to convert to units of km/s. \\[v_t = 4.74\\mu r\\] Adding the radial and transverse velocities in quadrature results in the total velocity of the star. \\[v = \\sqrt{v_r^2 + v_t^2}\\] Below is a Python script to perfom the above calculations.\n\n\n# a\nl_obs = 656.034 * u.nm\np = 0.54901 * u.arcsec\nmu = 10.3577 * u.arcsec / u.yr\n\nl_rest = 656.281 * u.nm\nz = (l_obs - l_rest) / l_rest\nv_r = (((z + 1) ** 2 - 1) / ((z + 1) ** 2 + 1)) * c.c\n\n# b\nr = p.to(u.pc, equivalencies=u.parallax())\nv_t = 4.74 * u.yr / u.arcsec / u.pc * u.km / u.s * mu * r \n\n#c\nv = np.sqrt(v_r ** 2 + v_t ** 2)\n\nprint(f\"radial velocity: {v_r.to(u.km / u.s):.2f}\")\nprint(f\"transverse velocity: {v_t:.2f}\")\nprint(f\"velocity: {v.to(u.km / u.s):.2f}\")\n\nradial velocity: -112.85 km / s\ntransverse velocity: 89.43 km / s\nvelocity: 143.99 km / s\n\n\n\nNote that the speed of Bernard’s star is less than that of the Sun with respect to the Milky Way, so the final speed is not particularly fast.\n\n\n\nProblem 4\nA white dwarf is a very dense star, with its ions and electrons packed extremely close together. Each electron may be considered to be located within a region of size \\(\\Delta x\\sim1.5\\times10^{-12}\\) m.\n\nUse Heisenberg’s uncertainty principle to estimate the minimum speed of the electron.\n\nDo you think that the effects of relativity will be important for these stars?\n\nAgain, using the ADS and/or ArXiV search engine tools, identify a recent (within the past few years) peer-reviewed scholarly manuscript that deals with white dwarf stars. Provide a brief summary of the main results of the paper, including a discussion of how the material connects to the concepts that we discussed in Chapter 5 of the textbook.\n\n\nAnswer: Rearranging the Heisenberg uncertainty principle to solve for the velocity \\[\\Delta v = \\frac{\\hbar}{2 m_e \\Delta x}\\] allows us to find the minimum velocity an electron must travel at given we know it’s location with a given uncertainty.\nA simple Python script below performs the above calculations.\n\n\ndx = 1.5E-12 * u.m\n\ndv = c.hbar / (2 * dx * c.m_e) \ndv.to(u.m / u.s)\n\n\nprint(f\"minimum speed of electron: {dv.to(u.m / u.s):.2e}\")\nprint(f\"v / c = {dv.to(u.m / u.s) / c.c:.2f}\")\n\nminimum speed of electron: 3.86e+07 m / s\nv / c = 0.13\n\n\n\nNote that the speed is just over 10% the speed of light, which is much greater than normal, everyday speeds we are used to. Given this, I would say relativistic effects would be just starting to have a noticable effect.\nThe Optically Thick Rotating Magnetic Wind from a Massive White Dwarf Merger Product. II. Axisymmetric Magnetohydrodynamic Simulations:\nSometimes white dwarfs collide, and when they do, they could: 1) trigger a supernova, 2) create a neutron star, or 3) merge into a single white dwarf. The latter was the topic of this paper, in particular, this team modeled the stellar wind that is created by the fast spinning and strong magnetic fields and carries mass away from the star. This team found that the wind is fastest and most luminous near the star’s equator and blows with an inconsistancy: some of the gas gets trapped in the magnetic field and subsequently ejected with the rearranging of the magnetic field lines. This is related to Chapter 5 in our textbook primarily with the fact that white dwarfs are found via spectroscopic (and photometric) methods, however, observationally, winds of a neutron star are measured via spectroscopy."
  },
  {
    "objectID": "courses/astrophysics/PS4.html",
    "href": "courses/astrophysics/PS4.html",
    "title": "Astrophysics PS4",
    "section": "",
    "text": "Problem 1\nThe Milky Way disk is approximately 50 kpc in diameter. Imagine that you observe a spaceship, which is 100 meters in length, traveling at 0.994 c.\n\nWhile the ship is in flight, how long does it appear to you?\nWhat is the diameter of the galaxy as measured by someone on the spaceship?\nHow long does the journey across the galaxy take, as measured by you?\nHow long does the journey across the galaxy take, as measured by someone on the spaceship?\n\n\nAnswer:\n\n\nimport astropy.units as u\nimport astropy.constants as c\n\nD_mw = 50 * u.kpc\nD_s = 100 * u.m\nv = 0.994 * c.c\n\ngamma = 1 / (1 - v**2 / c.c ** 2) ** 0.5\n\n# moving rulers are compressed\nD_s_prime = D_s / gamma\n\nD_mw_prime = D_mw / gamma\n\n# Moving clocks run slow\nt_rest = D_mw / v\n\nt_moving = t_rest / gamma\n\nprint(f\"length of moving ship from MW reference frame: {D_s_prime:.2f}\")\nprint(f\"length of MW from ship perspective: {D_mw_prime:.2f}\")\nprint(f\"time for ship to cross MW from MW perspective: {t_rest.to(u.yr):.2f}\")\nprint(f\"time for ship to cross MW from ship perspective: {t_moving.to(u.yr):.2f}\")\n\nlength of moving ship from MW reference frame: 10.94 m\nlength of MW from ship perspective: 5.47 kpc\ntime for ship to cross MW from MW perspective: 164062.56 yr\ntime for ship to cross MW from ship perspective: 17945.17 yr\n\n\n\n\nProblem 2\nStarting with the equation for superluminal motion, derive the following equations:\n\nv/c &lt; 1 for angles satisfying \\(\\frac{\\frac{v_{app}^2}{c^2} - 1}{\\frac{v_{app}^2}{c^2} + 1} &lt; \\cos\\phi &lt; 1\\)\nThat the smallest possible value for v/c for the source is \\(\\frac{\\frac{v_{app}^2}{c^2} - 1}{\\frac{v_{app}^2}{c^2} + 1} &lt; \\cos\\phi &lt; 1\\)\nThe smallest possible v/c will occur at an angle \\(\\phi_{min}\\) such that \\(\\cot\\phi_{min} = \\frac{v_{app}}{c}\\)\nThe Lorentz factor corresponding to the minimum v/c is \\(\\gamma_{min} = \\frac{1}{\\sqrt{1 - v_{min}^2}} = \\sqrt{1 + v_{app}^2/c^2} = \\frac{1}{\\sin\\phi_{min}}\\)\nThe inner 6” of the jet from M87 is observed to have an apparent velocity of 4.5c https://ui.adsabs.harvard.edu/abs/2013ApJ…774L..21M/abstract. Using your newly derived equations, estimate the minimum velocity, minimum approaching angle, and Lorentz factor of the jet.\n\n\nAnswer:\n\n\n\nProblem 3\nUse the ADS and/or ArXiV search engine tools to identify a recent (within the past few years) peer-reviewed scholarly manuscript that deals with a relativistic concept and/or observations of superluminal motion. Provide a brief summary of the main results of the paper, including a discussion of how the material connects to the concepts that we discussed in Chapter 4 of the textbook.\n\nAnswer:"
  },
  {
    "objectID": "courses/astrophysics/PS6.html",
    "href": "courses/astrophysics/PS6.html",
    "title": "Astrophysics PS6",
    "section": "",
    "text": "Problem 1\nThe Event Horizon Telescope revolutionized our understanding of black holes by producing the first image of the immediate region surrounding one such structure in the galaxy M87. The theoretical diffraction limit of the EHT is given in the discovery paper.\nTo demonstrate how amazing this is, consider that normal human hair grows at the rate of a half an inch per month. Imagine you could use the EHT to observe a human standing on the surface of the moon at its perigee orbital position. Using Lunar parameters from this page, how long (in units of days) will you have to wait for this instrument to be able to measure the growth of that human’s hair?\n\nAnswer: The diffraction limit is esstentially the smallest angle we are able to see with a telescope. According the discovery paper, the diffraction limit of the EHT is \\(25\\mu\\)as. Now the question becomes: If we place a person on the Moon at perigee, how long will we have to wait before we can observe their hair growing?\nUsing trig, we can determine the length corresponding to our diffraction angle at a distance of the Moon’s perigee. Dividing that length by the hair growth rate will tell us how long we would have to wait before we can resolve the image of the hair.\nThe code below does just that.\n\n\nimport astropy.units as u\nimport astropy.constants as c\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndiff_limit_EHT = 25 * 1E-6 * u.arcsec\n\nhair_growth_rate = 0.5 / 39.37 * u.meter / (1/12 * u.yr)\n\nmoon_perigee = 0.3633 * 1E6 * u.km\n\nphysical_diff_lim = moon_perigee * np.tan(diff_limit_EHT)\n\ntime = physical_diff_lim / hair_growth_rate\n\n\nprint(f\"Wait time: {time.to(u.yr) * 365 / u.yr:.2f} days\")\n\nWait time: 105.46 days\n\n\nNote that this time is approximately 3 months, which would correspond to hair that is 1.5 inches in length. Putting this all into context, the EHT can resolve the 1.5 inch long hair of a person on the Moon at perigee.\n\n\nProblem 2\nConsider a radio telescope operating in the S-band, which covers the frequency range of 2-4 GHz. Imagine that the telescope’s frequency dependence is triangular, meaning that the sensitivity of the detector is zero at the edges and maximal at band center.\nThis filter function is expressed as\n\\[f_\\nu = \\frac{\\nu}{\\nu_m - \\nu_l} - \\frac{\\nu_l}{\\nu_m - \\nu_l}\\text{ for } \\nu_l\\leq\\nu\\leq\\nu_m\\] \\[f_\\nu = -\\frac{\\nu}{\\nu_u - \\nu_m} + \\frac{\\nu_u}{\\nu_u - \\nu_m}\\text{ for } \\nu_m\\leq\\nu\\leq\\nu_u\\] \\[f_\\nu = 0\\text{ for all other }\\nu\\]\nHere \\(f_\\nu\\) is the filter function, \\(\\nu_m\\) is the mid-point frequency, \\(\\nu_u\\) is the upper (higher) frequency, and \\(\\nu_l\\) is the lower frequency.\nYou observe with this system at a frequency of 3.2 GHz with a bandwidth of 80 MHz.\n\nWhat are \\(\\nu_m\\), \\(\\nu_u\\), and \\(\\nu_l\\)?\n\nAssume that the radio dish is 100% efficient over the observing bandwidth and that the diameter of the dish is 65 m. Assume that the source is a galaxy with with a constant spectral flux density of 3.17 mJy over the detector’s frequency range.\n\nWhat is the total power received by the telescope?\nAssume that the source of the emission is a galaxy located at distance of 23 Mpc that radiates isotropically. What is the power emitted by this source?\n\n\nAnswer: Given our observing frequency and bandwitdth, the corresponding mid, lower, and upper frequencies are simply the center and bounds created by our bandwidth, centered at the observing frequency. Thus,\n\n\nf = 3.2 * u.GHz\nbw = 80 * u.MHz\nf_m = f\nf_l = f - 0.5 * bw\nf_u = f + 0.5 * bw\n\nprint(f\"mid-point frequency: {f}\")\nprint(f\"upper frequency: {f_u}\")\nprint(f\"lower frequency: {f_l}\")\n\nmid-point frequency: 3.2 GHz\nupper frequency: 3.24 GHz\nlower frequency: 3.16 GHz\n\n\nAssuming the radio dish is 100% effective, the total power is given by\n\\[P = S * A * \\Delta\\nu,\\]\nwhere \\(S\\) is the spectral flux density, \\(A\\) is the collecting area of the telescope, and \\(\\Delta\\nu\\) is the bandwidth.\n\nS = 3.17 * 1E-3 * u.Jy\nd = 65 * u.m\nD = 23 * u.Mpc\nA = np.pi * (d/2) ** 2\nP_obs = S * A * bw  # power (more like intensity?) received by telescope\n\nprint(f\"Power received by the telescope: {P_obs.to(u.W):.2e}\")\n\nPower received by the telescope: 8.42e-18 W\n\n\nThe ratio of the source power to the observed power is the same as the ratio of the area the intrinsic power is dispersed over (at Earch) to the area of the radio telescope.\n\\[\\frac{P_{source}}{P_{observed}} = \\frac{A_{source}}{A_{telescope}}\\]\nWe can find the power of the source by multiplying the ratio by the power observed by the telescope.\n\\[P_{source} = \\frac{A_{source}}{A_{telescope}} * P_{observed}\\]\n\n# power at source, ratio is the same\nA_source = 4 * np.pi * D ** 2\nA_telescope = np.pi * (d/2) ** 2\nratio = A_source / A_telescope\nP_source = P_obs * ratio\n\nprint(f\"Power emitted by the source: {P_source.to(u.L_sun):.2f}\")\n\nPower emitted by the source: 41.93 solLum\n\n\nThis is a very low luminosity for a galaxy, but if we are observing a star or pulsar, this might be a more reasonable value.\n\n\nProblem 3\nThe Macalester Observatory, located on the roof of Olin-Rice Hall, is a 16-inch diameter telescope with a focal length of 3251 mm.\n\nWhat is the focal ratio?\nWhat is the plate scale?\nImagine that the Macalester Observatory is used to observe two objects that are separated by 3.3 arcseconds on the sky. What is the linear separation of these objects on the focal plane in microns?\n\n\nAnswer: The focal ratio \\(F\\) is simply the focal length \\(f\\) divided by the diameter \\(D\\) of the telescope.\n\\[F = \\frac{f}{D}\\]\nThe plate scale \\(S\\) is defined as\n\\[S = \\frac{206265 \\text{ [\"] }}{f}\\]\nDividng an angular separation by the plate scale gives the linear separation on the focal plane.\n\\[\\Delta x = \\frac{\\Delta\\theta}{S}\\]\nThe code below perfoms the processes described above for the given scenario.\n\n\nf = 3251 * u.mm\nD = 16 / 39.37 * u.m\n\n# focal ratio F\nF = f / D\n\n# Plate Scale S\nS = 206265 * u.arcsec / f\n\n# Linear separation from projection\nsep = 3.3 * u.arcsec\nlin_sep = sep / S\n\nprint(f\"focal ratio F: {F.to(u.m/u.m):.2f}\")\nprint(f\"plate scale S: {S:.2f}\")\nprint(f'linear separation: {lin_sep.to(u.micron):.2f}')\n\nfocal ratio F: 8.00\nplate scale S: 63.45 arcsec / mm\nlinear separation: 52.01 micron"
  },
  {
    "objectID": "courses/astrophysics/PS7.html",
    "href": "courses/astrophysics/PS7.html",
    "title": "Astrophysics PS7",
    "section": "",
    "text": "Problem 1\nConsider a spectroscopic binary system with a period of 2.17 days. The orbits have zero eccentricity. The maximum Doppler shifts of the fainter and brighter stars are 112.6 km/s and 71.4 km/s, respectively.\n\nHow can an astronomer deduce the eccentricity of the orbits in a spectroscopic binary system? What observations, measurements, modeling, etc. are needed?\nAssuming a statistical value for , determine the total mass of the spectroscopic binary system (in solar masses). Explain your choice of statistical value.\nWhat is the mass of the fainter star?\nWhat is the mass of the brighter star?\n\n\nAnswer:\n\n\nimport astropy.units as u\nimport astropy.constants as c\nimport numpy as np\n\nP = 2.17 / 365 * u.yr\nV1 = 112.6 * u.km / u.s\nV2 = 71.4 * u.km / u.s\nsin3i = 2/3\n\ntotal_mass = P / (2 * np.pi * c.G) * (V1 + V2) ** 3 / sin3i\nprint(f\"total mass: {total_mass.to(u.M_sun):.2f}\")\n\nratio21 = V2 / V1\nm2 = total_mass / (ratio21 + 1)\nm1 = ratio21 * m2\nprint(f\"mass of fainter star: {m1.to(u.M_sun):.2f}\")\nprint(f\"mass of brighter star: {m2.to(u.M_sun):.2f}\")\n\ntotal mass: 2.10 solMass\nmass of fainter star: 0.82 solMass\nmass of brighter star: 1.29 solMass\n\n\n\n\nProblem 2\nAssume that two stars, “1” and “2”, are in circular obits about a common center of mass and are seperated by a distance “a”. Assume an orbital inclination of i and stellar radii of “R1” and “R2” for the two stars.\n\nFind an expression for i that just barely produces an eclipse. Hint: consider the Figure 7.8 from the textbook\n\nThe Kepler space telescope revolutionzed our understanding of extrasolar planets. Hundreds of scholarly manuscripts have been published about these results. One intriguing results is the Kepler-1661 system presented by Socia et al. (2020). Use the information in the paper and apply the equation you deduce for i to calculate:\n\nthe minimum inclination angle for an eclipse to occur at the minimum separation of the primary and secondary stars,\nand the minimum inclination angle for an eclipse to occur at the maximum separation of the primary and secondary stars.\nDo your constraints on i agree with the results presented by Socia et al. (2020)?\n\n\nAnswer:\n\n\\[i &gt; \\cos^{-1}\\left(\\frac{R_1 + R_2}{a}\\right)\\]\n\nR1 = 0.76 * u.R_sun\nR2 = 0.276 * u.R_sun\nP = 28.2 / 365 * u.yr\nm1 = 0.84 * u.M_sun\nm2 = 0.262 * u.M_sun\ne = 0.112\na = (P ** 2 * c.G * (m1 + m2) / (4 * np.pi ** 2)) ** (1/3)\ni = np.arccos((R1 + R2) / a)\ni.to(u.deg)\n\n\\(88.526554\\mathrm{{}^{\\circ}}\\)\n\n\n\n\nProblem 3\n\nConsider an eclipsing, spectroscopic binary system. The orbital period is 5.51 years and the eccentricity is zero. The maximum radial velocity of Star A is 4.7 km/s and the maximum radial velocity of Star B is 17.4 km/s. The time period between first contact (or beginning of eclipse) and minimum light is 0.48 days. The length of the primary minimum is 0.84 days. The apparent bolometeric magnitudes of maximum, primary minimum, and secondary minimum are 6.41, 9.12, and 6.66, respectively. Find the following:\n\n\nThe ratio of stellar masses\nThe sum of stellar masses (in solar masses)\nThe individual masses of Star A and Star B\nThe radii of Star A and Star B\nThe ratio of the effective temperature of the two stars.\n\n\nAnswer:\n\n\ne = 0\nP = 5.51 * u.yr\nv_A = 4.7 * u.km / u.s\nv_B = 17.4 * u.km / u.s\nv = v_A + v_B\ndt_fc_to_ml = 0.48 / 365 * u.yr\nprimary_minimum_length = 0.84 / 365 * u.yr\nB_0 = 6.41\nB_p = 9.12\nB_s = 6.66\n\nmAmB_ratio = v_B / v_A\n\ntotal_mass = P / (2 * np.pi * c.G) * (v_A + v_B) ** 3 / sin3i\nprint(f\"total mass: {total_mass.to(u.M_sun):.2f}\")\n\n\nm_B = total_mass / (mAmB_ratio + 1)\nm_A = mAmB_ratio * m_B\nprint(f\"Mass of Star A: {m_A.to(u.M_sun):.2f}\")\nprint(f\"Mass of Star B: {m_B.to(u.M_sun):.2f}\")\n\nR_s = v * dt_fc_to_ml / 2\nR_l = v * primary_minimum_length / 2 + R_s\n\nprint(f\"Radius of Star A: {R_l.to(u.R_sun):.2f}\")\nprint(f\"Radius of Star B: {R_s.to(u.R_sun):.2f}\")\n\n\ntemp_ratio = ((B_0 - B_p) / (B_0 - B_s)) ** (1/4)\nprint(f\"Temperature ratio (B to A): {temp_ratio:.2f}\")\n\ntotal mass: 3.38 solMass\nMass of Star A: 2.66 solMass\nMass of Star B: 0.72 solMass\nRadius of Star A: 1.81 solRad\nRadius of Star B: 0.66 solRad\nTemperature ratio (B to A): 1.81"
  },
  {
    "objectID": "courses/astrophysics/PS9.html",
    "href": "courses/astrophysics/PS9.html",
    "title": "Astrophysics PS9",
    "section": "",
    "text": "Problem 1\nDerive various important relationships that describe a blackbody radiation field.\n\nDerive an expression for the number density of blackbody photons (photons per unit volume) with wavelength \\(\\lambda\\) and \\(d\\lambda\\). This differential should be expressed in terms \\(d\\lambda\\).\nIntegrate the expression from a) over all wavelengths to obtain an expression for the total number density of blackbody photons. This results should include only numerical factors, fundamental constants, and the variable T (temperature).\nShow that, for a blackbody, the average energy per photon is a simple relationship involving only a numerical factor, a single fundamental constant, and the variable T (temperature).\n\n\nAnswer: The blackbody spectral energy density \\(u_\\lambda\\) for some \\(\\lambda+d\\lambda\\) is defined as \\[u_\\lambda d\\lambda = \\frac{4\\pi}{c}B_\\lambda d\\lambda= \\frac{8\\pi hc}{\\lambda^5}\\left(\\frac{1}{e^{hc/\\lambda k T}-1}\\right)d\\lambda.\\]\nAddititonally, we know the a photon with wavelength \\(\\lambda\\) has an energy described by \\[E = hf = \\frac{hc}{\\lambda}\\]\nDividing the blackbody spectral energy density by the photon energy will give us the number density of blackbody photons with wavelength \\(\\lambda\\) and \\(d\\lambda\\).\n\\[\\boxed{n_\\lambda d\\lambda = \\frac{u_\\lambda d\\lambda}{E} = \\frac{8\\pi}{\\lambda^4}\\left(\\frac{1}{e^{hc/\\lambda k T}-1}\\right)d\\lambda}\\]\nIntegrating the right hand side over all wavelengths to find the total number density of blackbody photons results in the following integral.\n\\[\\int_0^\\infty\\frac{8\\pi hc}{\\lambda^5}\\left(\\frac{1}{e^{hc/\\lambda k T}-1}\\right)d\\lambda\\]\nPlugging this integral into Mathematica gives the following result\n\\[n = \\int_0^\\infty\\frac{8\\pi hc}{\\lambda^5}\\left(\\frac{1}{e^{hc/\\lambda k T}-1}\\right)d\\lambda = 16\\pi\\zeta(3)\\left(\\frac{kT}{ch}\\right)^3\\]\nwhere \\(\\zeta(3)\\) is the Riemann zeta function which has an approximate value of 1.20206. Thus our total number density of blackbody photons is\n\\[\\boxed{n = 16\\pi\\zeta(3)\\left(\\frac{kT}{ch}\\right)^3 \\approx 19.2329\\pi\\left(\\frac{kT}{ch}\\right)^3}\\]\nThe total blackbody energy density over all wavelengths is \\[u = aT^4, \\quad a = \\frac{4\\sigma}{c} = 7.566\\cdot10^{-16}\\frac{\\text{J}}{\\text{m}^2 \\text{K}^4}\\]\nIf we divide the total blackbody energy density by our number density for blackbody photons found above, we should get the average energy per photon for a blackbody with temperature \\(T\\).\n\\[\\boxed{\\bar{E}_\\gamma = \\frac{u}{n} = \\frac{aT^4}{16\\pi\\zeta(3)\\left(\\frac{kT}{ch}\\right)^3} \\approx 2.70 T}\\]\n\n\n\nProblem 2\nA ground-based observatory makes two measurements of the specific intensity from a star:\n\n\\(I_1 = 7.51\\times10^{-12}\\) W m\\(^{-2}\\) is made at a zenith angle \\(\\theta_1=17.15\\) degrees\n\\(I_2 = 5.18\\times10^{-12}\\) W m\\(^{-2}\\) is made at a zenith angle \\(\\theta_2=37.86\\) degrees\n\n\nWhat is the vertical optical depth?\nWhat is the specific intensity above the Earth’s atmosphere (in W m$^-$2)?\n\n\nAnswer: For a ground based observer, the intensity as a function of optical depth goes as\n\\[I_\\lambda = I_{\\lambda,0} e^{-\\tau_{\\lambda,0}\\sec\\theta}\\]\nTaking the ratio of our measured intensities allows us to rearrange to solve for the intrinsic optical depth,\n\\[\\tau_{\\lambda,0} = \\frac{\\ln\\left(\\frac{I_{\\lambda,1}}{I_{\\lambda,2}}\\right)}{-\\sec\\theta_1 + \\sec\\theta_2}\\]\nwhere the vertical optical depth is airmass dependent.\n\\[\\tau_\\lambda = \\tau_{\\lambda,0}\\sec\\theta\\]\nOnce \\(\\tau_{\\lambda,0}\\) has been found, we can use either measured intensity and corresponding angle to determine the specific intensity before atmospheric attenuation.\n\\[I_{\\lambda,0} = \\frac{I_\\lambda}{e^{-\\tau_{\\lambda,0}\\sec\\theta}}\\]\nThe code chunk below performs the calculations described above.\n\n\nimport astropy.units as u\nimport numpy as np\n\nI1 = 7.51E-12 * u.W / u.m**2\nI2 = 5.18E-12 * u.W / u.m**2\ntheta1 = 17.15 * u.deg\ntheta2 = 37.86 * u.deg\n\ntau0 = np.log(I1 / I2) / (-(1/np.cos(theta1)) + (1/np.cos(theta2)))\ntau1 = tau0 / np.cos(theta1)\ntau2 = tau0 / np.cos(theta2)\nI0 = I1 / (np.exp(-tau0 / np.cos(theta1)))\n\nprint(f\"Intrinsic optical depth: {tau0:.2f}\")\nprint(f\"Vertical optical depth (I1): {tau1:.2f}\")\nprint(f\"Vertical optical depth (I2): {tau2:.2f}\")\nprint(f\"Specific intensity abover Earth's atmosphere: {I0:.2e}\")\n\nIntrinsic optical depth: 1.69\nVertical optical depth (I1): 1.77\nVertical optical depth (I2): 2.14\nSpecific intensity abover Earth's atmosphere: 4.39e-11 W / m2\n\n\n\n\nProblem 3\nIn this problem you will use the values of density and opacity at various points near the surface of a model star to calculate the optical depth. The model is that of a 1 Solar mass star with \\(T_{eff} = 5504\\) K. The data in stellar-opacity.dat (on Moodle) shows physical values in the outer 3.3% of the star’s radius; the surface of the star is at \\(r=7.1\\times10^8\\) m. We will use simple numerical integration to determine the optical depth in each region of the model. Recall that optical depth is defined by the relation Examining the data in the table, we see that we are given 42 model layers in the outer regions of the star. As one moves inward from the “surface” of the star to the interior, the values of \\(\\rho\\) and \\(\\kappa\\) change. We can determine the value of tau in each region by beginning with the outermost layer and working our way inward. To do this, we will apply the “Trapezoidal Rule”, a simple but effective numerical integration technique. The values of \\(\\tau\\) in each subsequent layer can be found by applying the relation\n\\[\\tau_{i+1} = \\tau_i - \\left(\\frac{\\kappa_i \\rho_i + \\kappa_{i+1} \\rho_{i+1}}{2}\\right)\\left(r_{i+1}-r_i\\right)\\]\nwhere \\(i\\) and \\(i+1\\) designate adjacent zones in the model. Find the optical depth at each point by numerically integrating the relation for tau using the trapezoidal rule as provided.\nUsing the software package of your choice, create six plots:\n\nkappa vs radius\nrho vs radius\ntau vs radius\nTemperature vs radius\ntau vs temperature\ntemperature vs physical depth into star\n\nEstimate graphically the depth that one “sees” as the “surface” of this model star by zooming in on the appropriate region of plot #6. Include a zoom and your numerical estimate for the depth in (km).\n\nAnswer: The code below calculates the optical depth using the trapezoidal rule numerical integration for \\(\\tau_{i+1}\\).\n\n\nfrom astropy.io import ascii\nimport astropy.units as u\nimport matplotlib.pyplot as plt\n\ndata = ascii.read(\"stellar-opacity.dat\")\n\nm = 1 * u.M_sun\nt_eff = 5504 * u.K\nr = 7.1E8 * u.m\n\ntau_values = [0]\n\ntau = 0\nfor i in range(len(data) - 1):\n    tau1 = tau - (data[\"kappa\"][i] * data[\"rho\"][i] + \n        data[\"kappa\"][i + 1] * data[\"rho\"][i + 1]) / 2 * (data[\"r\"][i + 1] - data[\"r\"][i])\n    tau = tau1\n\n    tau_values.append(tau)\n\ndata[\"tau\"] = tau_values\ndata[\"physical_depth\"] = np.ones(len(data)) * r.value - data[\"r\"]\n\n\n# eddington approximation\ndata[\"temp\"] = (0.75 * t_eff ** 4 * (data[\"tau\"] + (2/3))) ** (1/4)\n\n# plotting relationships\n# kappa vs radius\nplt.figure(figsize=(8,10))\nplt.subplot(3,2,1)\nplt.scatter(y = data[\"kappa\"], x = data[\"r\"])\nplt.xlabel(\"radius [m]\")\nplt.ylabel(\"kappa [m^2/kg]\")\n\n# rho vs radius\nplt.subplot(3,2,2)\nplt.scatter(y = data[\"rho\"], x = data[\"r\"])\nplt.xlabel(\"radius [m]\")\nplt.ylabel(\"rho [kg/m^3]\")\n\n# tau vs radius\nplt.subplot(3,2,3)\nplt.scatter(y = data[\"tau\"], x = data[\"r\"])\nplt.xlabel(\"radius [m]\")\nplt.ylabel(\"tau\")\n\n# temp vs radius\nplt.subplot(3,2,4)\nplt.scatter(y = data[\"temp\"], x = data[\"r\"])\nplt.xlabel(\"radius [m]\")\nplt.ylabel(\"temp [K]\")\n\n# tau vs temp\nplt.subplot(3,2,5)\nplt.scatter(y = data[\"tau\"], x = data[\"temp\"])\nplt.xlabel(\"temp [K]\")\nplt.ylabel(\"tau\")\n\n# temp vs physical depth\nplt.subplot(3,2,6)\nplt.scatter(y = data[\"temp\"], x = data[\"physical_depth\"])\nplt.xlabel(\"physical depth [m]\")\nplt.ylabel(\"temp [K]\")\n\nplt.subplots_adjust(wspace=0.5, hspace=0.5)\nplt.show()\n\n\n\n\n\n\n\n\n\nThe code below finds the value of \\(\\tau\\) closest to 2/3, which corresponds to the optical depth we “see” as the “surface” and plots vertical and horizontal lines corresponding to the approximate physical depth and temperature, respectively.\n\n\n# calculate physical depth of optical depth = 2/3\nmask = (data[\"tau\"] &lt; 1) & (data[\"tau\"] &gt; 1/3)\nsubdata = data[\"tau\",\"physical_depth\",\"temp\"][mask]\nprint(subdata)\n\nplt.figure()\nplt.scatter(y = data[\"temp\"], x = data[\"physical_depth\"])\nplt.xlabel(\"physical depth [m]\")\nplt.ylabel(\"temp [K]\")\nplt.xlim(0, 0.2e7)\nplt.ylim(0,10000)\nplt.vlines(subdata[\"physical_depth\"][1], linestyle = '--', color = \"orange\", \n            label = \"tau ~ 2/3\", ymax = subdata[\"temp\"][1], ymin = 0)\nplt.hlines(subdata[\"temp\"][1], linestyle = '--', color = \"orange\", \n            xmax = subdata[\"physical_depth\"][1], xmin = 0)\nplt.legend()\nplt.show()\n\n        tau         physical_depth        temp       \n                                           K         \n------------------- -------------- ------------------\n0.43573334109647177       904100.0 5248.4195311617905\n 0.6007624700982208       993800.0  5434.688576387231\n 0.8392023782404089      1091500.0  5674.015822750679\n\n\n\n\n\n\n\n\n\n\nIn this case, we can “see” (\\(\\tau \\sim 2/3\\)) to a physical depth of approximately \\(10^6\\) m into the star."
  },
  {
    "objectID": "courses/ML/index.html#model-evaluation",
    "href": "courses/ML/index.html#model-evaluation",
    "title": "Machine Learning Notes - Adapted from Macalester’s STAT 253 SP25 Course by Brianna Heggeseth",
    "section": "Model Evaluation",
    "text": "Model Evaluation\n\nModel Evaluation\nOnce we have the model, we need to evaluate:\n\nIs the model wrong?\n\neg. Linear fit on quadratic data\nLook at residual plot\n\nIs the model strong?\n\nHow well does our model explain the variability in response?\nLook at \\(R^2\\), adjusted \\(R^2\\)\n\nDoes the model produce accurate predictions?\n\nLook at residual plot\nMSE, RMSE, MAE\n\nIs the model fair?\n\nWho collected/funded the data?\nHow/why did they collect it?\nImplications of analysis\n\n\n\n\nOverfitting\nAdding more predictors can result in an overfit model. Relying on in-sample metrics can lead to overfitting\n\nIn-sample metrics only tell you how the model performs on that dataset used to make the model.\nBiased!\nOverly optimisitc!\n\nPrevention\n\nTraining vs testing groups\nk-Fold Cross Validation\n\n\n\nCross-Validation\nAlgorithm:\n\nSplit data into \\(k\\) folds\nFor each fold:\n\nRemove the fold from the data set, this will be the testing set\nUse the rest of the data to train the model\nCalculate the error between the testing and training model\n\nAverage all error estimates from each fold\n\nThis is a more accurate value for what you expect your model to be off by when tested on new data.\nCommon values of \\(k\\): 7, 10\nNote: \\(k=n\\) is also known as Leave One Out Cross Validation (LOOCV)"
  },
  {
    "objectID": "courses/ML/index.html#model-selection",
    "href": "courses/ML/index.html#model-selection",
    "title": "Machine Learning Notes - Adapted from Macalester’s STAT 253 SP25 Course by Brianna Heggeseth",
    "section": "Model Selection",
    "text": "Model Selection\nHow can we decide what predictors to include in our model?\nMethods:\n\nVariable selection Identify a subset of predictors\n\nBest subset selection\nBackward-stepwise selection\nForward-stepwise selection\n\nShrinkage / regularization Shrink/regularize the coefficients of all predictors towards 0.\n\nLASSO, ridge regression, elastic net\n\nDimension Reduction Combine predictors into a smaller set of new predictors\n\nPrincipal componets regression\n\n\n\nModel Selection\nGreedy algorithms:\n\nBest Subset Selection Build all \\(2^p\\) models that use any combination of available predictors and identify best model based on chosen metric\n\nComputationally expensive\n\nBackward Stepwise Selection Build a model with all \\(p\\) predictors. Remove the predictor with largest p-value and build a model with the remaining. Repeat till you have \\(p\\) models. Identify best to some metric.\n\nGreedy\nOverestimates significance of remaining predictors\n\nForward Stepwise Selection Better than Best Subset Selection, but worse than Backwards Stepwise Selection.\n\nComputationally expensive\nCan produce odd combination of predictors\n\n\n\n\nLASSO: Shrinkage / Regularization\nLeast squares that penalizes predictors that add complexity.\nPros:\n\nhelps with model selection, preventing overfitting\nPredictors must be scaled (R does it for us)\nIsn’t greedy and doesn’t choose variables based on p-values\n\nTuning:\n\n\\(\\lambda = 0\\), LASSO = Least Squares\nAs \\(\\lambda\\) increases, variable coefficients go to zero\n\n```{r}\n#| message: false\n#| warning: false\n#| eval: false\n\n# model specificiation\nmodel_spec &lt;- linear_reg() %&gt;%\n  set_mode(\"regression\") %&gt;%\n  set_engine(engine = \"glmnet\") %&gt;%\n  set_args(mixture = 1, penalty = tune())\n\n# model recipe\ndata_recipe &lt;- recipe(y ~ ., data = ___) %&gt;%\n  step_dummy(all_nominal_predictors())  # normalization done by glmnet\n\n# model workflow\nmodel_wf &lt;- workflow() %&gt;%\n  add_recipe(data_recipe) %&gt;%\n  add_model(model_spec)\n\n# cross validation\nset.seed(___)\nmultiple_models &lt;- model_wf %&gt;%\n  tune_grid(\n    grid = grid_regular(\n      penalty(range = c(___, ___)),  # range is on log10 scale     \n      levels = ___  # how many models to build\n    ),\n    resamples = vfold_cv(___, v = ___),\n    metrics = metric_set(mae)\n)\n\n# model selection\nmultiple_models %&gt;%\n  collect_metrics()\n\nautoplot(multiple_models)\n\nbest_param &lt;- multiple_models %&gt;%\n  select_best(metric = \"mae\")\n\nparsimonious_param &lt;- multiple_models %&gt;%   \n  select_by_one_std_err(metric = \"mae\", \n                        desc(penalty))\n\n# final model\nfinal_model &lt;- model_wf %&gt;%\n  finalize_workflow(parameters = parimonious_param) %&gt;%\n  fit(data = ___)\n```"
  },
  {
    "objectID": "courses/ML/index.html#flexible-models",
    "href": "courses/ML/index.html#flexible-models",
    "title": "Machine Learning Notes - Adapted from Macalester’s STAT 253 SP25 Course by Brianna Heggeseth",
    "section": "Flexible Models",
    "text": "Flexible Models\nWhat if the relationship between \\(x\\) and \\(y\\) is more complicated? Use flexible models!\nParametric vs Nonparametric Models\n\nParametric Assumes relationship across domain of function\nNonparametric More flexibility in relationship between \\(x\\) and \\(y\\)\n\n\nNonparametric Models\nNeed to consider the scale of variables when calculating distances between observations with more than one predictor (NORMALIZE!)\n\nNormalization - an example of pre-processing, decisions wherein effect models and predictons\nMight need to preprocess data in variable recipe\n\n\n\nKNN Regression and the Bias-Variance Tradeoff\n\nNonparametric\nAssumption: Similar \\(x\\) values imply similar \\(y\\) values.\nfrom kknn package: knn predicts y from weighted average\n\nmore influence to closer neighbors\n\n\nAlgorithm:\n\nIdentify \\(K\\) nearest neighbors of \\(x\\) with respect to Euclidean distance\nObserve the \\(y\\) values of these neighbors\n\\(f(x) = \\text{average}(y \\text{ neighbors})\\)\n\n```{r}\n#| message: false\n#| warning: false\n#| eval: false\n\n# model specificiation\nmodel_spec &lt;- nearest_neighbors() %&gt;%\n  set_mode(\"regression\") %&gt;%\n  set_engine(engine = \"kknn\") %&gt;%\n  set_args(neighbors = tune())\n\n# model recipe\ndata_recipe &lt;- recipe(y ~ ., data = ___) %&gt;%\n  step_dummy(all_nominal_predictors()) %&gt;%\n  step_normalization(all_numeric_predictors())\n\n# model workflow\nmodel_wf &lt;- workflow() %&gt;%\n  add_recipe(data_recipe) %&gt;%\n  add_model(model_spec)\n\n# cross validation\nset.seed(___)\nknn_models &lt;- model_wf %&gt;%\n  tune_grid(\n    grid = grid_regular(\n      neighbors(range = c(1, ___)),     \n      levels = ___  # how many models to build\n    ),\n    resamples = vfold_cv(___, v = ___),\n    metrics = metric_set(mae)\n)\n\n# model selection\nknn_models %&gt;%\n  collect_metrics()\n\nautoplot(knn_models)\n\nbest_knn &lt;- select_best(knn_models, metric = \"mae\")  # parsimony is irrelevant\n\n# final model\nfinal_model &lt;- model_wf %&gt;%\n  finalize_workflow(parameters = best_knn) %&gt;%\n  fit(data = ___)\n```\nBias-Variance Tradeoff\n\nBias How well does the model predict values?\n\nExtremes: \\(K=1\\), overfit, no bias; \\(K=K\\) just a line but smoothed due to weights\n\nVariance How does the model shape change from dataset to dataset?\n\nOverfit model: passes through each point in the data, high variance\n\n\n\n\nLOESS & Splines\nSplines\n\nFit polynomial models in small localized regions and make the boundaries smooth.\nCan only spline one quantitative predictor\nNatural vs basis\n\nNatural: pass deg_free argument where deg_free = # of knots + 1\n\nVariant of B-splines with additional constraint at boundaries to reduce variance\nKnots typically based on quantiles of predictor\n\nBasis: specify specific knots options = list(knots = c(x_1, x_2))\n\nYou choose the knots\nFunctions can be unstable at boundaries\n\n\n\n```{r}\n#| message: false\n#| warning: false\n#| eval: false\n\n# model specificiation\nmodel_spec &lt;- linear_reg() %&gt;%\n  set_mode(\"regression\") %&gt;%\n  set_engine(engine = \"lm\")\n\n# model recipe\ndata_recipe &lt;- recipe(y ~ ., data = ___) %&gt;%\n  step_ns(x, deg_free = ___)  # natural splines, deg_free = # knots + 1\n  step_bs(x, options = list(knots = c(___, ___)))  # basis splines, specific locations of knots\n\n# model workflow\nmodel_wf &lt;- workflow() %&gt;%\n  add_recipe(data_recipe) %&gt;%\n  add_model(model_spec)\n\n# cross validation\nmultiple_models &lt;- model_wf %&gt;%\n  fit_resamples(\n    resamples = vfold_cv(___, v = ___),\n    metrics = metric_set(mae)\n  )\n\n# final model\nfinal_model &lt;- model_wf %&gt;%\n  fit(data = ___)\n```\nLOESS\n\nFit regression models in small, localized regions, where nearby data have greater influence than far data\nCan only LOESS one quantitative predictor\nNonparametric\nAlgorithm:\n\nDefine the span \\(h \\in (0,1]\\). Perform the following to estimate \\(f(x)\\) at each possible predictor value \\(x\\)\n\nIdentify a neighborhood consisting of the \\(100\\times h\\%\\) of cases that are closes to \\(x\\)\nPutting more weight on closer \\(x\\) neighbors, fit a linear model in this neighborhood\nUse the local linear model to estimate \\(f(x)\\)"
  },
  {
    "objectID": "courses/astrophysics/Exam1.html",
    "href": "courses/astrophysics/Exam1.html",
    "title": "Astrophysics Exam 1 Revision",
    "section": "",
    "text": "Problem 1\nThe spring constellation, Leo, hosts many galaxies in its vicinity on the sky, including several Messier objects. Find the angular separation of the two spiral galaxies M95 and M96 located just under the bent coat hanger, I mean, lion. The J2000 coordinates for the two objects are:\nM95: $(\\alpha, \\delta) = $ 10:43:57.7, +11:42:13\nM96: $(\\alpha, \\delta) = $ 10:46:45.7, +11:49:12\n\nOriginal Answer (7/10): \\(\\Delta\\theta \\approx 1.8631\\) deg\nRevised Answer (10/10): I forgot that the declination angle was given in “degrees:arcminutes:arcseconds”. Instead, I incorrectly thought it was given in “degrees:minutes:seconds” meaning I would need to multiply the last two terms by a factor of 15 to convert them to degrees from hours. This results in my declinations terms being off by approximately 10 degrees for both measurements. If I had the correct numbers for the declinations in degrees, I would have calculated the correct answer to within half an arcsecond (the rest of my math was correct).\nI will say that forgetting declination is in degrees:ARCminutes:ARCseconds is a pretty big mistake, but it was also my only mistake on a problem with a lot of algebra, so I would only take off 3 points from my original answer.\nThe code below correctly calculates the angular separation between the two galaxies using Astropy’s SkyCoords class and separation method.\n\n\nimport astropy.units as u\nfrom astropy.coordinates import SkyCoord\nimport numpy as np\nM95 = SkyCoord(\"10:43:57.7 +11:42:13\", unit=(u.hourangle, u.deg))\nM96 = SkyCoord(\"10:46:45.7 +11:49:12\", unit=(u.hourangle, u.deg))\n\nsep = M96.separation(M95)\nsep.to(u.deg)\n\n\\(0^\\circ41{}^\\prime42.41536068{}^{\\prime\\prime}\\)\n\n\n\n\nProblem 2\nA hypotheical dwarf planet follows and eccentric orbit about the Sun \\((\\epsilon = 0.32)\\), and is estimated to have an orbital period of 650 years.\n\nIf this object were on a perfectly circular orbit, at what distance would it be located from the Sun?\nWhat is the closest that this object gets to the Sun?\nWhat is the furthest that this object gets from the Sun?\n\n\nOriginal Answer (10/10):\n\n\\(a \\approx 75.037\\) AU\nperihelion \\(\\approx 51.025\\) AU\naphelion \\(\\approx 99\\) AU\n\nRevised Answer (10/10): Since the dwarf planet is orbiting the Sun, we can use Kepler’s Third Law, which I did for my original answer. Additionally, the perihelion and aphelion are the locations in an orbit where an object is closest and furthest from the principle focus (in this case the Sun), respectively, and are given by the following equations\n\\[r_{p} = a - ae, \\quad r_{a} = a + ae,\\]\nwhere \\(a\\) is the semi-major axis. The code below verifies my original calculations.\n\n\ne = 0.32\nP = 650 * u.yr\n\n# a) kepler's 3rd law\na = (P ** (2/3)).value * u.au\nprint(f\"a = {a:.2f}\")\n\n# b) perihelion\nr_p = a - a * e\nprint(f\"perihelion: {r_p:.2f}\")\n\n# c) aphelion\nr_a = a + a * e\nprint(f\"aphelion: {r_a:.2f}\")\n\na = 75.04 AU\nperihelion: 51.03 AU\naphelion: 99.05 AU\n\n\n\n\nProblem 3\nYou are attempting to resolve two galaxies using observations of a spectral line with rest wavelength 31.065 cm. These galaxies, both located at a distance of 14.7 Mpc, are physically separated by 61.9 kpc. Assuming a circular aperture, what diameter must your telescope have (in units of meters) in order to resolve these sources?\n\nOriginal Answer (6/10): \\(D = 2.79\\cdot 10^{6}\\) m\nRevised Answer (8/10): Originally, I solved the angular resolution formula for diameter, then used parallax to get half the angular separation, doubled it to get the angle, plugged in the result to get the diameter.\nI now think the problem is simply geometry. Specifically, the angle of the separation of these two galaxies at their given distance is the minimum resolving angle. The code chunk below performs this calculation and results in an answer that matches intuition; our answer is slightly larger than that of the diameter of green bank, which is a radio telescope that typically observes the 21 cm line (31 cm is slightly larger, so maybe we’d expect a slightly larger telescope).\nMy original answer the right equation, but wrong understanding. However, I did check my work and conclude it was unphysical in the exam, so I would give myself 6/10.\nI give myself 8/10 now, because I am not quite sure why parallax doesn’t work in this case, especially since the foundation for parallax is a geometric scenario very similar to what I used below.\n\n\nl_rest = 31.065 * u.cm\ndist = 14.7 * u.Mpc\nsep = 61.9 * u.kpc\n\ntheta = (sep / (2 * dist)).to(u.m/u.m)\ndiameter = 1.22 * l_rest / theta\nprint(f\"diameter: {diameter.to(u.m):.2f}\")\n\ndiameter: 180.01 m\n\n\n\n\nProblem 4\nIn a gas of neutral Hydrogen atoms, at what temperature (in units of Kelvin) is the number of atoms in the second excited state equal to 2.38% of the number of atoms in the ground state?\n\nOriginal Answer (9/10): 29485 K\nRevised Answer (10/10): In my original answer, I rearranged the correct formula to solve for temperature\n\\[\\frac{N_b}{N_a} = \\frac{g_b}{g_a}e^{-\\frac{\\Delta E}{kT}}\\longrightarrow T = \\frac{-\\Delta E}{k\\ln\\frac{N_b}{N_a}\\frac{g_a}{g_b}}\\]\nbut my end result differs from my revised answer. I likely entered the numbers into the calculator wrong during the exam, as my revised answer is the same order of magnitude as my original answer.\n\n\nimport astropy.constants as c\ng_a = 2 * 1 ** 2  # ground state degeneracy\ng_b = 2 * 3 ** 2  # second excited state degeneracy\n\nratio = 0.0238  # N_b / N_a\n\nE_a = -13.6 * u.eV\nE_b = E_a / 3 ** 2\ndE = E_b - E_a\n\nT = - dE / (c.k_B * np.log(ratio * g_a / g_b))\n\nprint(f\"Temperature: {T.to(u.Kelvin):.2f}\")\n\nTemperature: 23635.85 K\n\n\n\n\nProblem 5\nA main sequence star has a measured parallax angle of 0.0129 arcseconds. This star has an apparent bolometric magnitude of 3.749.\n\nWhat is the distance to the star?\nWhat is the distance modulus of this star?\nWhat is the absolute magnitude of this star?\nWhat is the ratio of the luminosity of this star to that of the Sun?\nIf the distance to this star were to increase by a factor of three, what would be its apparent magnitude?\n\n\nOriginal Answer (10/10):\n\n\\(d = 77.5194\\) pc\n\\(m-M = 4.4471\\)\n\\(M = -0.6981\\)\n149.7063 times more luminous than the Sun\n\\(m_{3d} = 6.1346\\)\n\nRevised Answer (10/10): All of my revised answers match my original answers.\n\n\np = 0.0129 * u.arcsec\nm = 3.749\nM_Sun = 4.74\n\n# a)\ndistance = p.to(u.pc, equivalencies=u.parallax())\nprint(f\"distance = {distance:.3f}\")\n\n# b)\ndist_mod = 5 * np.log10(distance.value) - 5\nprint(f\"m-M = {dist_mod:.3f}\")\n\n# c)\nM = m - dist_mod\nprint(f\"M = {M:.3f}\")\n\n# d)\nL_Lsun = 10 ** ((M - M_Sun) / -2.5)\nprint(f\"{L_Lsun:.2f} times more luminous than the Sun\")\n\n# e)\nm_3d = 5 * np.log10(3 * distance.value) - 5 + M\nprint(f\"m at 3d = {m_3d:.2f}\")\n\ndistance = 77.519 pc\nm-M = 4.447\nM = -0.698\n149.70 times more luminous than the Sun\nm at 3d = 6.13\n\n\n\n\nProblem 6\nWhat is your favorite book?\n\nOriginal Answer: The Expanse series of Three Body Problem.\nRevised Answer: The Dark Forest from the Three Body Trilogy\n\n\n\nProblem 7\nThe plot below shows an observing plan at the Macalester Observatory. THe elevations of the three sources (the Sun in red, the Moon in dashed gray, and the target of interest in blue) are plotted as functions of time, with midnight central time being at 0 hours. The graph is color-coded to show the sky darkness. Using this plot, and recalling that the Macalester Observatory is located at a latitude of +45 degrees, find\n\nthe declination of the “Target” object in units of degrees, and\nestimate when during the year this observing plan may have been scheduled.\n\n\nOriginal Answer (3/10):\n\nAround +10 degrees\nAround March 19th\n\nRevised Answer (7/10): I confused the target’s transit with the Moon’s transit.\nIf we are observing from Macalester, our zenith is +45 degrees, so the horizon corresponds to 45 - 90 = -45 degrees declination. If our target reaches a 40 degree altitude, then the target is 40 degrees above the horizon. Thus, the declination of the target is -45 + 40 = -5 degrees declination.\nThe Sun is also at an altitude of 40 degrees, which corresponds to a declination of -5 degrees, so we are either approaching March 20 or September 23 recently passed. I cannot think of any way to further determine the time of year from this plot, but I imagine there is a way to determine if it were vernal or autumnal, so I give myself only 7/10 for this problem.\n\n\n\nProblem 8\nAn eclipsing, double-line spectroscopic binary system consisting of two main sequence stars has an orbital period of 7.17 years. By analyzing the spectra, you determine wavelength shifts of 0.011 nm and 0.064 Angstroms for the two stars.\n\nWhat is the mass ratio of the larger to the smaller star?\nThe spectral energy distribution of the cooler star suggests a masss of 1.13 Solar masses. What is the mass of the hotter star (in Solar masses)?\nDescribe the observations and measurements needed to determine the relative temperatures and radii of these stars?\n\n\nOriginal Answer (10/10):\n\n\\(\\frac{m_1}{m_2} = 1.7188\\)\n\\(m_1 = 1.9422 M_{\\odot}\\)\nTemps? –&gt; Need lightcurve. Radii? –&gt; Need lightcurve. [Included labeled diagram and equations.]\n\nRevised Answer (10/10): We expect the ratio of the heavier to lighter star to be proportional to the lighter star’s shift to the heavier star’s shift.\n\\[\\frac{m_1}{m_2} = \\frac{\\Delta\\lambda_2}{\\Delta\\lambda_1}\\]\nSince they are main sequence stars, we expect the more massive star to be hotter. The code chuck below calculates the answers for parts a) and b)\n\n\ndl1 = 0.064 * u.angstrom  # smaller shift, more massive\ndl2 = 0.011 * u.nm  # larger shift, less massive\n\n# a)\nmass_ratio = dl2 / dl1\nprint(f\"The larger star is {mass_ratio.to(u.m/u.m):.2f} more massive\")\n\n# b)\nm_2 = 1.13 * u.M_sun\nm1 = mass_ratio * m_2\nprint(f\"Mass of larger star: {m1.to(u.M_sun):.2f}\")\n\nThe larger star is 1.72 more massive\nMass of larger star: 1.94 solMass\n\n\n\nTo elaborate on part c), since this is an eclipsing binary, we should be able to obtain a lightcurve for the system, wherein we could measure the baseline brightness \\(B_0\\), the brightness of the primary dip \\(B_p\\), and the brightness of the secondary dip \\(B_s\\) to extract the ratio of the temperature of the smaller star \\(T_s\\) to that of the larger star \\(T_l\\) though the following relationship.\n\\[\\frac{B_0 - B_p}{B_0 - B_s} = \\left(\\frac{T_s}{T_l}\\right)^4\\]\n\n\nFrom the transits, we can measure the times when the smaller star begins/ends transitting infront/behind the larger star. We can find the radii of the two stars from the following equations,\n\\[r_s = \\frac{V}{2}(t_b - t_a), \\quad r_l = \\frac{V}{2}(t_c - t_a) = r_s + \\frac{V}{2}(t_c - t_b)\\]\nwhere \\(V = V_s + V_1\\) (which can be determined from the mass ratio) and \\(t_a\\), \\(t_b\\), and \\(t_c\\) are the start time of transit of primary dip, start of primary dip constancy, and end primary dip constancy, respectively.\n\n\n\nProblem 9\nThe plot shows the observed radial velocities of two stars in a gravitationally bound orbit abuot their common center of mass. Four full orbital periods are shown.\n\nWhat can be said about the eccentricity of the orbits? If it can be determined, give the eccentricity. If not, explain why not, and provide possible constraints.\nWhat can be said about the inclination of the system? If it can be determined, give the inclination. If not, explain why not, and provide possible constraints.\nIf the less massive star has a mass of 2.17 Solar masses, then what is the mass of the other star (in Solar masses)?\n\n\nOriginal Answer (10/10):\n\nBoth observed \\(v_r\\)’s are very periodic and sinusoidal which implies circular orbits (\\(e\\approx0\\)).\nInclination affects amplitude of the plot. Need separation and distance to determine \\(i\\) but could assume \\(\\sin^3i \\approx 2/3\\)\nlarger star mass \\(\\approx 5.58\\) solar masses\n\nRevised Answer (10/10): None of my answers changed in my revision, so I would give myself a 10/10 for both attempts.\nAs I mentioned in my original answer, the orbits are very sinusoidal with no skewness. This implies an orbit with low eccentricity.\nI agree with my answer for part b), in that inclination affects the amplitude of the plot, but we would need more information to determine the inclination. Most binary systems we detect have \\(\\sin^3i \\approx 2/3\\), so we could assume that applies to this system, but would need to know masses, distances, and either the semimajor axes lengths or angles subtended by the semimajor axes.\nThe code chunk below calculates the mass ratio from the velocity ratio of the two stars governed by the following equation.\n\\[\\frac{m_A}{m_B} = \\frac{v_B}{v_A}\\]\nMultiplying the mass ratio by the mass of the lower star, we can determine the mass of the larger star.\n\n\nv_A = 7\nv_B = 18\nm_s = 2.17 * u.M_sun\nratio = v_B / v_A\nm_l = m_s * ratio\nprint(f\"larger star mass: {m_l:.2f}\")\n\nlarger star mass: 5.58 solMass\n\n\n\n\nProblem 10\nThe plot shows the number ratio of atoms in the second stage of ionization versus the total numbe rof atoms for various hypothetical atomic species, “A”, “B”, “C”, and “D”. The four species have identical partition functions for all stages of ionization and they all have exactly the same ionization energy for the first stage fo ionization. The only parameter that differs is the ionization energy for the second stage of ionization.\n\nWhat is the name of the equation used to build these curves.\nWhich atomic species has the smallest ionization energy? Explain.\nWhich atomic species has the greatest ionization energy? Explain.\n\n\nOriginal Answer (6/10):\n\nSaha equation\n\\(A\\) has smallest ionization energy because it peaks at a lower \\(\\lambda\\). In other words, the fraction of ionized particles to total reaches 1 at lower temperatures so it takes less energy to ionize \\(A\\).\nFor a similar argument, \\(D\\) must have the highest ionization energy since \\(N_a/N_{total}\\) peaks at higher temperatures.\n\nRevised Answer (10/10): The only thing I would change is my typo; \\(\\lambda\\) should be temperature. I don’t know why I said \\(\\lambda\\) as it’s not even on the plot, but if we make the replacement with temperature, the answer for part b) reads correctly: “\\(A\\) has the smallest ionization energy because it peaks at a lower temperature.” Since my typo reads as a lack of conceptual understanding and I incorporate my argument from b) into c), I would give my original answer a 6/10.\n\n\n\nProblem 11\nThe plot shows the Maxwell-Boltzmann distributions of two parcels of gas, “A” and “B”. Each parcel of gas has an identical composition of pure Hydrogen atoms.\n\nWhat is the temperature of the gas in parcel “A”?\nWhat is the average kinetic energy of a gas particle in parcel “B”?\n\n\nOriginal Answer (4/10):\n\nWe don’t know the actual temp, but we do know \\(A\\) is cooler than \\(B\\) bc distribution is averages at lower velocities than \\(B\\).\nSimilarly, we don’t know the exact value, but we know the average is higher than \\(A\\) and is related by \\(v = \\sqrt{\\frac{3kT}{m}}\\longleftrightarrow KE = \\frac{3}{2}kT\\)\n\nRevised Answer (10/10): I think my original answers were based on the understanding that temperature can be found from velocity, but we were given a velocity distribution, so picking one velocity as the “gas velocity” would result in a different temperature depending on what velocity you pick.\nWhat I failed to catch was we could use the most probable velocity to determine the temperature, then use that temperature to calculate the average kinetic energy of the gas.\n\\[v_{mp} = \\sqrt{\\frac{2kT}{m}} \\longrightarrow T = \\frac{v_{mp}^2 m}{2k}, \\quad KE_{avg} = \\frac{3}{2}kT\\]\nThe following code chunk calculates the temperature of gas \\(A\\) and the average kinetic energy of a particle in gas \\(B\\).\n\n\nv_mpA = 10.5 * u.km / u.s\nv_mpB = 13 * u.km / u.s\nm = c.m_p  # proton/Hydrogen mass\n\n# a)\nT_A = v_mpA ** 2 * m / (2 * c.k_B)\nprint(f\"Temperature of Gas A: {T_A.to(u.K):.2f}\")\n\n# b)\nT_B = v_mpB ** 2 * m / (2 * c.k_B)\nKE_avg_B = 3/2 * c.k_B * T_B\nprint(f\"Average Kinetic Energy of Particle in B: {KE_avg_B.to(u.eV):.2f}\")\n\nTemperature of Gas A: 6678.26 K\nAverage Kinetic Energy of Particle in B: 1.32 eV\n\n\n\n\nReflection\n\nWhat did you feel the most and least confident about going into the exam?\n\n\nAnswer: I felt most confident in my ability to do algebraic manipulation on equations to derive the answer, but least confident in my ability to not make calculator mistakes under the time crunch. I had a comprehensive equation sheet and I felt confident in my ability to interpret them, but I was worried I wouldn’t do as well on conceptual questions.\n\n\nWhat did “grading”/“correcting” your exam help you to understand better?\n\n\nAnswer: I will always remember that declination is given in degrees:arcminutes:arcseconds, not degrees:minutes:seconds. I also solidified my belief that python should be trusted for number crunching than a handheld calculator, at least in my hands. The main thing grading the quiz helped me with was understanding my errors because it forced me to redo the problems.\n\n\nWhat topics from the first unit do you feel like you still have the most room for improvement?\n\n\nAnswer: As I go into more detail in my revisions for the specific problems, I still have some confusion on why parallax didn’t work for the Problem 3 and want to understand how I can interpret the plot in Problem 7 fully. Regarding topics in general, I feel fairly confident in my understanding for most of the material except for orbital mechanics, spectral features, and observing plans. For orbital mechanics, I think I’m mainly confused on what parameters we can determine from each given binary type. The class on spectral features was one that I missed for a swim meet, so I’m worried I missed something. Even though I took observational astronomy, we never had to determine if an observation was feasible that quickly/without help; I would like to get a stronger intuition regarding the time an observation could be observed. Basically, Problem 7 made me realize I don’t understand equinoxes and LST well.\n\n\nIf 10 pts per problem (except problem 6), what would your original grade be versus the version you’re turning in now?\n\n\nAnswer: Excluding problem 6, I would have received a 75/100. With revisions, I believe I have corrected my exam up to a 95/100."
  },
  {
    "objectID": "courses/astrophysics/PS11.html",
    "href": "courses/astrophysics/PS11.html",
    "title": "Astrophysics PS11",
    "section": "",
    "text": "Problem 1\n\nUsing the equation that gives the FWHM at a given wavelength thermal and turbulent motions (given below. Note in class, we just saw the factor by which the line is broaden), estimate full width at half-maximum of the hydrogen H\\(\\alpha\\) absorption line due to random thermal motions in the Sun’s photosphere. Assume the temperature is the Sun’s effective temperature.\nUsing H\\(\\alpha\\) redshift data for solar granulation (discussed in Ch. 11 of the textbook), estimate the FWHM when convective turbulent motions are included with thermal motions.\nWhat is the ratio of \\(v^2_{turb}\\) to \\(2kT/m\\)?\nDetermine the relative change in the FWHM due to Doppler broadening when turbulence is included. Does turbulence make a significant contribution to FWHM in the solar photosphere?\n\n\nAnswer: The following code chunk calculates the answers to the questions above. Given the relative change in part d), turbulence does not make a significant contribution to FWHM in the solar photosphere.\n\n\nimport astropy.units as u\nimport astropy.constants as c\nimport numpy as np\n\nT = 5777 * u.K\nhalpha = 656 * u.nm\nv_turb = 0.4 * u.km / u.s\nm = c.m_p\nk = c.k_B\n\n# a\nfwhm_no_turb = 2 * halpha / c.c * np.sqrt(2 * k * T / m * np.log(2))\nprint(f\"fwhm without turbulence: {fwhm_no_turb.to(u.angstrom):.4f}\")\n\n# b\nfwhm = 2 * halpha / c.c * np.sqrt((2 * k * T / m + v_turb ** 2) * np.log(2))\nprint(f\"fwhm with turbulence: {fwhm.to(u.angstrom):.4f}\")\n\n# c\nratio = v_turb ** 2 / (2 * k * T / m)\nprint(f\"v_turb^2 is {100 * ratio.to(u.dimensionless_unscaled):.4f}% of 2kT/m\")\n\n# d\nrelative_change = (fwhm - fwhm_no_turb) / fwhm_no_turb\nprint(f\"relative change in FWHM with turbulence: {100 * relative_change:.4f}%\")\n\nfwhm without turbulence: 0.3558 Angstrom\nfwhm with turbulence: 0.3561 Angstrom\nv_turb^2 is 0.1678% of 2kT/m\nrelative change in FWHM with turbulence: 0.0838%\n\n\n\n\nProblem 2\nSuppose you are attempting to make observations through an optically thick gas that has a constant density and temperature. Assume that the density and temperature of the gas are \\(2.2\\times10^{-4}\\) kg m\\(^{-3}\\) and 5777 K, respectively, typical of the values found in the Sun’s photosphere.\na) If the opacity of the gas at one wavelength (\\(\\lambda_1\\)) is \\(\\kappa_{\\lambda 1} = 0.026\\) m\\(^2\\) kg\\(^{-1}\\) and the opacity at another wavelength (\\(\\lambda_2\\)) is $_{} = 0.030 $ m\\(^2\\) kg\\(^{-1}\\), calculate the distance into the gas where the optical depth equals 2/3 for each wavelength.\nb) At which wavelength can you see farther into the gas? c) How much farther?\n\nAnswer: The code chunk below calculates the distances for \\(\\lambda_1\\) and \\(\\lambda_2\\) from the given the opacities, density, and optical depths. From this result, we find that \\(\\lambda_1\\) has the larger distance, thus we can see further into the gas at \\(\\lambda_1\\) by about 15 km.\n\n\ntau_1, tau_2 = 2/3, 2/3\nrho = 2.2E-4 * u.kg / u.m ** 3\nkappa_1 = 0.026 * u.m ** 2 / u.kg\nkappa_2 = 0.030 * u.m ** 2 / u.kg\n\ns_1 = tau_1 / (kappa_1 * rho)  # distance for lambda 1\ns_2 = tau_2 / (kappa_2 * rho)  # distance for lambda 2\nprint(f\"s1: {s_1:.2e}\")\nprint(f\"s2: {s_2:.2e}\")\nprint(f\"difference: {s_1 - s_2:.2f}\")\n\ns1: 1.17e+05 m\ns2: 1.01e+05 m\ndifference: 15540.02 m\n\n\n\n\nProblem 3\nAssume that a large solar flare erupts in a region where the magnetic field strength is 0.03 T and that it releases 1025 J in one hour. a) What was the magnetic energy density in that region before the eruption began? b) What minimum volume would be required to supply the magnetic energy necessary to fuel the flare? c) Assuming for simplicity, that the volume involved in supplying the energy for the flare eruption was a cube, compare the length of the one side of the cube with the typical size of a large flare. d) How long would it take an Alfven wave to travel the length of the flare?\n\nAnswer: The code chunk below calculates the answers the questions above. The energy density was found using \\[u_m = \\frac{B^2}{2\\mu_0},\\]\nwhich allowed us to find the volume by dividing the given energy by our answer for energy density. Assuming the volume was a cube, then a side length is the cube root of the total volume, which results in a length \\(1.42\\cdot^{-8}\\) times the size of a large flare (100,000 km).\nThe alfven speed of a wave is given by \\[v_a = \\frac{B}{\\sqrt{\\mu_0 \\rho}},\\]\nwhere \\(\\rho\\) is the density of the photosphere, which is given in the textbook to be \\(4.9\\cdot10^{-6}\\) kg / m\\(^3\\). Dividing the length of our cube volume by the alfven speed gives the total time for an alfven wave to traverse the flare, which we estimate to be around \\(1.17\\cdot10^{-4}\\) s.\n\n\nB = 0.03 * u.T\nenergy = 1025 * u.J\ndensity = 4.9E-6 * u.kg / u.m ** 3\n\n# a\nu_m = B ** 2 / (2 * c.mu0)\nprint(f\"energy density of flare: {u_m.to(u.J / u.m ** 3):.2e}\")\n\n# b\nvolume = energy / u_m\nprint(f\"minimum volume of flare: {volume.to(u.m ** 3):.2e}\")\n\n# c\nlength = volume ** (1/3)\nlarge_flare_length = 1E5 * u.km\nratio = (length / large_flare_length).to(u.dimensionless_unscaled)\nprint(f\"length of cube with volume above: {length.to(u.m):.2e}\")\nprint(f\"the cube length is {ratio:.2e} times the size of a large flare\")\n\n# d\nv_alfven = B / np.sqrt(c.mu0 * density)\ntime = length / v_alfven\nprint(f\"alfven speed of wave: {v_alfven.to(u.m / u.s):.2e}\")\nprint(f\"time for alfven wave to traverse length of flare: {time.to(u.s):.2e}\")\n\nenergy density of flare: 3.58e+02 J / m3\nminimum volume of flare: 2.86e+00 m3\nlength of cube with volume above: 1.42e+00 m\nthe cube length is 1.42e-08 times the size of a large flare\nalfven speed of wave: 1.21e+04 m / s\ntime for alfven wave to traverse length of flare: 1.17e-04 s"
  },
  {
    "objectID": "courses/astrophysics/PS10.html",
    "href": "courses/astrophysics/PS10.html",
    "title": "Astrophysics PS11",
    "section": "",
    "text": "Problem 1\n\nTaking into consideration the Maxwell-Boltzmann velocity distribution, what temperature would be required for two protons to collide if quantum mechanical tunneling is neglected? You may assume that nuclei having velocities 8x the RMS values for the Maxwell-Boltzmann distribution can overcome the Coulomb barrier. Compare your answer with the estimated central temperature of the Sun.\nUsing the Maxwell-Boltzmann distribution, determine the ratio of the number of protons having velocities 8x the RMS value to those moving at the RMS velocity.\nAssuming (incorrectly) that the Sun is pure hydrogen, estimate the number of hydrogen nuclei in the Sun. Could there be enough protons moving with speed 8x the RMS value to account for the Sun’s luminosity? How long could these reactions sustain the current Solar luminosity? Hint: you may assume that the number of protons with velocity \\(\\sim v_{rms}\\) is most of the hydrogen atoms.\n\n\nimport astropy.units as u\nimport astropy.constants as c\nimport numpy as np\n\nT = c.e.value ** 2 / (384 * c.k_B * np.pi * c.eps0 * c.a0 * 2)\nT\n\n\\(1644.6616 \\; \\mathrm{\\frac{K}{F\\,J}}\\)\n\n\n\n\nProblem 2\n\nCalculate the Eddington luminosity for a 0.072 solar mass star and a 120 solar mass star.\nCompare the Eddington luminosities to their actual luminosities and discuss whether or not radiation pressure is likely to play a role in the star’s evolution.\n\n\nFor the low-mass star: log10(L/Lsolar) = -4.3, and opacity = 0.001 m2 kg-1\nFor the high-mass star: log10(L/Lsolar) = 6.252, and opacity is dominated by electron scattering (see equation 9.27)\n\n\n# M_low = \n# M_high = \n# kappa_low = \n# kappa_high = \n# L_edd_low = 4 * np.pi * c.G * c.c * M_low / kappa_low"
  },
  {
    "objectID": "courses/astrophysics/PS13.html",
    "href": "courses/astrophysics/PS13.html",
    "title": "Astrophysics PS13",
    "section": "",
    "text": "Problem 1\nThe relationships for the Jeans mass, the Jeans length, and the free-fall timescale are fundamental. In this problem, you will explore these relationships over a range of physical properties. Consider a cloud of pure molecular hydrogen. Create two plots to demonstrate the behaviors of these fundamental relations:\n\nJeans Mass versus temperature: Plot the Jeans Mass (in units of Solar masses) versus temperature over the range 5 K \\(\\leq T \\leq\\) 100 K. Show curves for five different densities, starting at \\(1\\times10^{-17}\\) kg m\\(^{-3}\\) and increasing by a factor of two for each subsequent calculation. Clearly label each curve with its value of density and also with its characteristic free-fall timescale (in units of Myr).\nJeans Length versus temperature: Plot the Jeans Length (in units of pc) versus temperature over the range 5 K \\(\\leq T \\leq\\) 100 K. Show curves for five different densities, starting at \\(1\\times10^{-17}\\) kg m\\(^{-3}\\) and increasing by a factor of two for each subsequent calculation. Clearly label each curve with its value of density and also with its characteristic free-fall timescale (in units of Myr).\nIn a few sentences describe the trends you observe in each of the plots you created.\n\n\nAnswer: The Jeans Mass increases as temperature increases, but increases more rapidly for lower density material. The lowest density material also has the longest time to collapse. The Jeans Radius increases more slowly at higher temperatures across all densities, however the Jeans Radius for lower density material is higher than the Jeans Radius for the higher density material across all temperatures.\n\n\nimport astropy.units as u\nimport astropy.constants as const\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef jeans_mass(T, mu, rho):\n    M_j = ((5 * const.k_B * T) / (const.G * mu * const.m_p\n        )) ** (3/2) * (3 / (4 * np.pi * rho)) ** (1/2)\n    return M_j.to(u.M_sun)\n    \ndef jeans_radius(T, mu, rho):\n    R_j = ((15 * const.k_B * T) / (4 * np.pi * const.G * mu * const.m_p * rho)) ** (1/2)\n    return R_j.to(u.pc)\n\ndef t_ff(rho):\n    t = np.sqrt((3 * np.pi)/(32 * const.G * rho))\n    return t.to(u.Myr)\n\nT = np.linspace(5, 100, 96) * u.K\nmu = 1\nrho = 1E-17 * u.kg / u.m ** 3\n\nplt.figure(figsize=(8,6))\nplt.subplot(2,1,1)\nplt.plot(T, jeans_mass(T, mu, rho), label = f\"{rho}, t_ff = {t_ff(rho):.2f}\")\nplt.plot(T, jeans_mass(T, mu, 2 * rho), label = f\"{2 * rho}, t_ff = {t_ff(2 * rho):.2f}\")\nplt.plot(T, jeans_mass(T, mu, 4 * rho), label = f\"{4 * rho}, t_ff = {t_ff(4 * rho):.2f}\")\nplt.plot(T, jeans_mass(T, mu, 8 * rho), label = f\"{8 * rho}, t_ff = {t_ff(8 * rho):.2f}\")\nplt.plot(T, jeans_mass(T, mu, 16 * rho), label = f\"{16 * rho}, t_ff = {t_ff(16 * rho):.2f}\")\nplt.xlabel(\"Temperature [K]\")\nplt.ylabel(\"Jeans Mass [Solar Mass]\")\nplt.title(\"Jeans Mass vs Temperature For Various Densities\")\nplt.legend()\n\nplt.subplot(2,1,2)\nplt.plot(T, jeans_radius(T, mu, rho), label = f\"{rho}, t_ff = {t_ff(rho):.2f}\")\nplt.plot(T, jeans_radius(T, mu, 2 * rho), label = f\"{2 * rho}, t_ff = {t_ff(2 * rho):.2f}\")\nplt.plot(T, jeans_radius(T, mu, 4 * rho), label = f\"{4 * rho}, t_ff = {t_ff(4 * rho):.2f}\")\nplt.plot(T, jeans_radius(T, mu, 8 * rho), label = f\"{8 * rho}, t_ff = {t_ff(8 * rho):.2f}\")\nplt.plot(T, jeans_radius(T, mu, 16 * rho), label = f\"{16 * rho}, t_ff = {t_ff(16 * rho):.2f}\")\nplt.xlabel(\"Temperature [K]\")\nplt.ylabel(\"Jeans Radius [pc]\")\nplt.title(\"Jeans Radius vs Temperature For Various Densities\")\nplt.subplots_adjust(hspace=0.5)\n\n\n\n\n\n\n\n\n\n\nProblem 2\nPick a recently published paper that investigates the IMF Here is a link to a refined ADS search that may be a good place to start.\nAnswer the following questions:\n\nHow do these astronomers investigate the IMF? (Describe data, models, etc.)\nWhat do they conclude about the IMF?\nHow do their results compare to what we talked about in class?\n\n\nAnswer: We read: Early Enrichment Population Theory at High Redshift by Blackwell and Bregman, published in The Astrophysical Journal on January 20, 2025.\n\nThe visible galaxies and stars in a galaxy cluster cannot have produced the measured ICM metallicity. In order to have the observed intracluster medium metallicity of glaxy clusters, a theory exists that says a population of stars must have existed at high redshifts that populated the clusters with the missing metals. Previous work argued the IMF of this theory must be flatter than lower redshift IMFs, but they didn’t have that high precision. This work used supernovae, delay time distributions, and luminosity functions of galaxy clusters to derive two best-fit IMFs that are flatter than standard IMFs.\nTheir model can successfully produce the observed ICM metallicity and agrees with observations. Interestingly, the model also predicts a rise in the Type Ia supernova rate at increasing redshift.\nIn class, we only talked about the interstellar medium. This paper introduced the idea of an intrcluster medium, which is like the ISM but on much larger scales. Overall, it seems the process for determining the two is just a scaled mapping; instead of looking at clusters of stars, like we do for the ISM, we look at clusters of galaxies."
  },
  {
    "objectID": "courses/astrophysics/PS12.html",
    "href": "courses/astrophysics/PS12.html",
    "title": "Astrophysics PS12",
    "section": "",
    "text": "Problem 1\nIn a certain part of the North American Nebula, the amount of interstellar extinction in the visual wavelength band is 1.1 magnitudes. The thickness of the nebula is estimated to be 20 pc, and it is located 700 pc from Earth. Suppose that a B spectral class main-sequence star is observed in the direction of the nebula and that the absolute visual magnitude of the star is known to be \\(M_V = -1.1\\) from spectroscopic data. Neglect any other sources of extinction between the observer and the nebula.\n\nFind the apparent visual magnitude of the star if it is lying just in front of the nebula.\nFind the apparent visual magnitude of the star if it is lying just behind the nebula.\nWithout taking the existence of the nebula into consideration, based on its apparent magnitude how far away does the star in part b) appear to be? What would be the percentage error in determining the distance if interstellar extinction were neglected?\n\n\nimport astropy.units as u\nimport astropy.constants as c\nimport numpy as np\nA = 1.1\nnebula_thickness = 20 * u.pc\ndistance = 700 * u.pc\nM = -1.1\n\n# part a) in front of cloud\nm_front = M + 5 * np.log10(distance.value) - 5\nprint(m_front)\n\n# part b) behind cloud\nm_behind = M + 5 * np.log10(distance.value + nebula_thickness.value) - 5 + A\nprint(m_behind)\n\n# part c) behind cloud, no dust\nd_nodust = 10 ** ((m_behind - M + 5) / 5) * u.pc\npercent_error = np.abs(d_nodust - distance) / distance\nprint(d_nodust)\nprint(percent_error)\n\n8.125490200071285\n9.286662482156343\n1194.9025733550443 pc\n0.7070036762214919\n\n\n\n\nProblem 2\nPart 1) Using the Boltzmann factor, estimate the temperature required for a hydrogen atom’s electron and proton to go from being anti-aligned to being aligned. Are the temperatures in H I clouds sufficient to produce this low-energy excited state?\nPart 2) A cold H I cloud produces a 21-cm line with an optical depth at its center of \\(\\tau_\\lambda = 0.5\\). a) Where on the curve of growth do you expect this line to lie? b) Check your answer in part a) to equation 12.7 in the book. If the temperature of the gas is 100 K, the line’s full width at half-maximum is 10 km/s, and the average atomic number density is \\(10^7\\) m\\(^{-3}\\), how thick is the cloud? Express your answer in pc. c) What other observations could you conduct to verify this thickness?\n\n# part 1\nenergy = c.h * c.c / (21 * u.cm)\np_ratio = 1E-6\nT = -energy / (c.k_B * np.log(p_ratio))\nprint(T.to(u.K))  # diffuse HI clouds T~30-80K\n\n# part 2a\n\n\n# part 2b\ntau_H = 0.5\ntemp = 100 * u.K\nfwhm = 10 * u.km / u.s\nn = 1E7 / (u.m ** 3)\nN_H = tau_H * temp * fwhm / 5.2E-23\ns = N_H / n\nprint(s.to)\n\n# part 2c\n\n0.004959149671348803 K\n&lt;bound method Quantity.to of &lt;Quantity 9.61538462e+17 m3 K km / s&gt;&gt;\n\n\n\n\nProblem 3\n\nEquations 12.10 and 12.11 in the book illustrate a cooling mechanism for a molecular cloud accomplished through the excitation of oxygen atoms. Explain why the excitation of hydrogen rather than oxygen is not an effective cooling mechanism.\nWhy are the temperatures of hot cores significantly greater than dense cores?\nConsidering the cooling mechanisms discussed for molecular clouds, explain why dense cores are generally cooler than the surrounding giant molecular clouds, and why GMCs are cooler than diffuse molecular clouds.\n\n\n\nProblem 4\n\nIn the case where the magnetic energy density is much greater than the thermal energy density, the pressure support for an interstellar cloud will be dominated by magnetic pressure. For this situation, derive the critical mass needed for gravity to win and collapse the cloud. (Hint: instead of starting with the virial theorem, compare the total magnetic energy to the gravitational potential energy…).\nEstimate the gravitational energy per unit volume in the dense core of the giant molecular cloud in the book’s example 12.2.1, and compare that with the magnetic energy density that would be contained in the cloud if it had a magnetic field of uniform strength, B = 1 nT. Could the magnetic fields play a significant role in the collapse of the cloud? At what strength would the magnetic fields either start or stop playing a significant role in the collapse of the cloud?"
  },
  {
    "objectID": "courses/astrophysics/PS14.html",
    "href": "courses/astrophysics/PS14.html",
    "title": "Astrophysics PS13",
    "section": "",
    "text": "Problem 1\nThe “Padova” stellar evolution models are among the most sophisticated and frequently used. These models allow the user to examine the physical properties of stars in different evolutionary phases. The most recent updates to the models are described in Pastorelli et al. (2020); the various references included therein allow a complete perspective on the historical development of the models.\nThe Padova models have been used to create the plots on the following two slides, which show a model of a 1 Solar mass star. In the first plot, the luminosity is plotted versus surface temperature, with points color-coded by age. In the second plot, mass loss rate is plotted against age.\nUsing your understanding of stellar evolution, write a complete description of the physical changes that are occurring as the star evolves in this diagram. What stage(s) of stellar evolution are being tracked? How do you know? What happened to the star immediately before this part of its evolution? What do you expect to happen immediately after? Your response should include all aspects of the physical processes at work in the star.\n \n\nAnswer: The plots above are tracking the evolutionary stages of a 1 solar mass star after He core flash (end of RGB) and into early AGB. Below is a list that describes the evolutionary stages of the model in order.\n\nHe Core Flash\n\n\nHe core continued to collapse during the RGB, becoming increasingly electron degenerate.\nSignificant neutrino loss caused a negative temperature gradient (temperature inversion)\nDensity and temperature increse enough for triple-alpha process to start, causing a nearly explosive energy release\nHe shell is activated, with the core joining shortly after, removing temperature inversion\nLuminosity generated by He burning core is comperable to that of an entire galaxy, but only lasts for a couple seconds, with most of the energy never reaching the surface, rather getting absorbed by the overlying layers.\n\n\nHorizontal Branch\n\n\nThe envelop is contracting, increasing effective temperature, and causing convection zones to arise in both the core and envelope.\nBlueward motion is essentially helium-burning analog of hydrogen-burning in MS, just on a much shorter timescale\nAt bluest point, the mean molecular weight has increased such that the core begins to contract, causing the envelop to expand and cool.\nShortly after starting the move redward, the helium core is exhausted, and the CO core continues to collapse.\nPulsations can occur due to instabillities.\nThe He shell narrows and the temperature increases, which causes the surrounding layers to expand and cool, causing a temporary turn-off for H-burning shell.\nHe exhausted core contracts, neutrino production increases, core cools slightly\n\n\nEarly Asymptotic Giant Branch\n\n\nHe-burning-shell analog to H-burning-shell RGB; He-burning shell dominates energy output (H-burning shell is nearly inactive)\nExpanding envelop initially absorbs most of the energy, but as the effective temperature continues to decrease, the convenctive envelope deepens again, creating a second dredge-up that increases He and N contents of the envelope\n\n\n\n\nProblem 2\nThe Padova evolutionary models calculate the masses in the cores and envelopes of each model star in each time interval. Here we will consider the model stars that are in the TP-AGB phase after log(t)=8.04 years; these are stars whose initial masses were 5.11 Solar masses or larger. More massive stars have evolved completely, and less massive stars have not yet reached the TP-AGB phase. Using the file “Padova_log_age_8.04.dat” on Moodle, create two plots:\n\nShow the ratio of core mass (column labeled “McoreTP”) to remaining star mass (column labeled “Mass”) as a function of remaining star mass. Bonus “points” if you colorize the points by age!\nShow the mass loss rate (column labeled “Mloss”) as a function of remaining star mass. Bonus “points” if you colorize the points by age!\nAs remaining stellar mass increases, does the ratio of core mass to total mass increase or decrease? How should this be interpreted, given the results we see in the mass loss versus time plot?\n\n\nAnswer: The code below generates the plots in parts 1) and 2).\nAs the remaining stellar mass increases, the ratio of core mass to total mass decreases. In other words, as we lose mass, the core to total mass ratio increases, indicating that the core is becoming the dominant mass in the star.\n\n\nfrom astropy.io import ascii\nimport matplotlib.pyplot as plt\nimport numpy as np\ndata = ascii.read(\"Padova_log_age_8.04.dat\")\ndata[\"McoreTP/Mass\"] = data[\"McoreTP\"] / data[\"Mass\"]\n\n# 2a\nplt.figure()\nplt.scatter(data[\"Mass\"], data[\"McoreTP/Mass\"], c=data[\"logTe\"])\nplt.plot(data[\"Mass\"],data[\"McoreTP/Mass\"])\nplt.colorbar(label = \"Log Effective Temperature\")\nleft, right = plt.xlim()\nplt.xlim(right, left)\nplt.xlabel(\"Remining Stellar Mass\")\nplt.ylabel(\"Core Mass / Remaining Stellar Mass\")\n\n# 2b\nplt.figure()\nplt.plot(data[\"Mass\"],data[\"Mloss\"])\nplt.xlabel(\"Remaining Stellar Mass\")\nplt.ylabel(\"Mass Loss\")\nleft, right = plt.xlim()\nplt.xlim(right, left)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProblem 3\nThe Padova evolutionary models calculate the mass loss rate (in units of Solar masses per year) using a Reimers approximation at each time interval:\n\\[\\frac{dM}{dt} = (-4\\times10^{-13})\\frac{\\eta\\cdot L}{g\\cdot R}\\]\nwhere L, R, and g are in Solar units. From the second graph in the first problem, we see that the mass loss rate goes very high in the last time intervals. The model values at the last calculated time (\\(\\log t = 10.05\\), where t is in units of years) are as follows:\n\\[\n\\begin{align*}\n    \\log\\left(\\frac{L}{L_\\odot}\\right) = 1.345 \\\\\n    \\log\\left(\\frac{T}{\\text{Kelvin}_\\odot}\\right) = 3.6634 \\\\\n    \\log\\left(\\frac{g}{g_\\odot}\\right) = 3.676 \\\\\n\\end{align*}\n\\]\nThe surface gravity is expressed units of cm sec\\(^{-2}\\).\nUsing a value of \\(\\eta = 0.25\\), find\n\nThe radius of the model star in solar radii (Is it what you would expect?)\nThe value of the mass loss rate in solar radii.\n\n\nAnswer: The code chunk below calculates the stellar radius using the Stefan-Boltzmann Law\n\\[L = 4\\pi R^2\\sigma T^4.\\]\nUsing this equation, we get an estimated radius of around 7.4 solar radii, which is reasonable considering we are dealing with a start that was initially around 5 solar masses and it is going through periods of pulsation.\nUsing the calculated radius in part a) and solving for the luminosity, temperature, and surface gravity in the equations provided, we can use the given formula for mass loss,\n\\[\\frac{dM}{dt} = (-4\\times10^{-13})\\frac{\\eta\\cdot L}{g\\cdot R},\\]\nto solve for part b). Note that we get a value that is essentially zero. This is in agreement with what we see in our plots for Question 2, where most of the mass of the star is in the core, so there is no fuel for the core to do fusion, so there are no thermal pulses, so there is no mass loss.\n\n\nimport astropy.units as u\nimport astropy.constants as c\nT = 10 ** 3.6634 * u.K\nL = 10 ** 1.345 * u.L_sun\ng = 10 ** 3.676 * u.cm / u.s ** 2\neta = 0.25\n\n# a\nR = np.sqrt(L / (4 * np.pi * c.sigma_sb * T ** 4))\nprint(f\"{R.to(u.R_sun):.2f}\")\n\n# b\ndMdt = -4E-13 * eta * L / (g * R.to(u.R_sun))\nprint(f\"{dMdt.to(u.M_sun / u.yr):.2e}\")  # basically zero\n\n7.39 solRad\n-5.52e-20 solMass / yr"
  },
  {
    "objectID": "courses/ML/index.html#logistic-regression",
    "href": "courses/ML/index.html#logistic-regression",
    "title": "Machine Learning Notes - Adapted from Macalester’s STAT 253 SP25 Course by Brianna Heggeseth",
    "section": "Logistic Regression",
    "text": "Logistic Regression\n\nClassification to model binary categorical \\(y\\).\nInterpret in log(odds)\n\n\n\\[\\text{odds} = \\frac{p}{p-1},\\quad p = \\frac{\\text{odds}}{\\text{odds} + 1}\\]\n\n\n\n\nScale\nImpossible\n50/50\nCertain\n\n\n\n\np\n0\n0.5\n1\n\n\nodds\n0\n1\n\\(\\infty\\)\n\n\nlog(odds)\n-\\(\\infty\\)\n0\n\\(\\infty\\)\n\n\n\nIf we want to make more concrete predictions, we use the probability to make a classification through a classification rule. Can be based on:\n\nPredictor value\nProbability\nlog(odds)\n\nVisually, the classification rule partitions the data. If the data overlaps, our rule might not always be correct. We can create an in-smaple confusion matrix from our classification rule to calculate the following:\n\n\n\n\nTruth\n\n\n\n\n\nPrediction\nNo\nYes\n\n\nNo\nTN\nFN\n\n\nYes\nFP\nTP\n\n\n\nSensitivity (TP rate): \\(\\frac{TP}{TP + FN}\\) Specificity (TN rate): \\(\\frac{TN}{TN + FP}\\)\nIf you want to improve sensitivity, lower the classification threshold. Note that sensitivity is inversely proportional to specificity, so increasing sensitivity will decrease specificity.\nTuning the classification rule: context\n\nConsequences of misclassification\nPrioritize high sensitivity to avoid FN / increase TP\nPrioritize high specificity to avoice FP / increase TN\n\nReciever Operating Characteristic (ROC) Curve:\n\nSensitivity vs 1 - Specificity (FPR)\n\nArea under the curve (AUC):\n\nProbability we correctly identified \\(y=0\\) and \\(y=1\\)\nMeasures overall effectiveness of classification model\nCloser to 1 the better (0.5 is when Sensitivity = 1 - Specificity)\n\n```{r}\n#| message: false\n#| warning: false\n#| eval: false\n\n# Ensure outcome is categorical\nsample_data &lt;- sample_data %&gt;% \n  mutate(y = as.factor(y))\n\n# relevel outcome if you want to look at different category\nsample_data &lt;- sample_data %&gt;%\n  mutate(y = relevel(y, ref = \"CATEGORY NOT INTERESTED IN\"))\n\n# Create logistic regression classification model specification \nmodel_spec &lt;- logistic_reg() %&gt;%\n  set_mode(\"classification\") %&gt;%\n  set_engine(engine = \"glm\")\n\n# Make data recipe\ndata_rec &lt;- recipe(y ~ x, data = sample_data)\n\n# Create model workflow\nmodel_wf &lt;- workflow() %&gt;%\n  add_recipe(data_rec) %&gt;%\n  add_model(model_spec)\n\n# cross-validate with 10 folds\nmultiple_models &lt;- model_wf %&gt;%\n  fit_resamples(\n    resamples = vfold_cv(sample_data, v = 10),\n    control = control_resamples(save_pred = TRUE, entry_level = \"second\"),\n    metrics = metric_set(accuracy)  # could also specify sensitivity, specificity, roc_auc\n  )\n\n# finalize model\nfinal_model &lt;- model_wf %&gt;%\n  fit(data = sample_data)\n```"
  },
  {
    "objectID": "courses/ML/index.html#knn-trees",
    "href": "courses/ML/index.html#knn-trees",
    "title": "Machine Learning Notes - Adapted from Macalester’s STAT 253 SP25 Course by Brianna Heggeseth",
    "section": "KNN & Trees",
    "text": "KNN & Trees\nPro:\n\nNon-parametric classification\nFlexibility\nNo assumptions on shape of relationship\nGood with complicated relationships\n\nCon:\n\nLack of insights\nIgnores relationships that do exist\nComputationally intensive\n\n\nKNN\nGoal: build classification model of categorical response variable\nAlgorithm:\n\nID nearest neighbors w.r.t. \\(x\\) values\nGet \\(y\\) value of neighbors\nPredict the most common neighbor value\n\nPro:\n\nFlexible\nIntuitive\nMore than 2 outcome categories\n\nCon:\n\nLazy learner; must calculate distances at time of prediction for each point we classify\nComputationally intensive\nProvides classifications, but no real sense of relationships\n\n```{r}\n#| message: false\n#| warning: false\n#| eval: false\n\n# Ensure outcome is categorical\nsample_data &lt;- sample_data %&gt;% \n  mutate(y = as.factor(y))\n\n# Create KNN classification model specification \nmodel_spec &lt;- nearest_neighbor() %&gt;%\n  set_mode(\"classification\") %&gt;%\n  set_engine(engine = \"kknn\") %&gt;%\n  set_args(neighbors = tune())\n\n# Make data recipe, convert all predictors to numbers and normalize\ndata_rec &lt;- recipe(y ~ x, data = sample_data) %&gt;%\n  step_dummy(all_nomial_predictors()) %&gt;%\n  step_normalize(all_numeric_predictors())\n\n# Create model workflow\nmodel_wf &lt;- workflow() %&gt;%\n  add_recipe(data_rec) %&gt;%\n  add_model(model_spec)\n\n# Cross-validate\nmultiple_models &lt;- model_wf %&gt;%\n  tune_grid(\n    grid = grid_regular(\n      neighbors(range = c(1, 7)),\n      levels = 10\n    ),\n    resamples = vfold_cv(sample_data, 10),\n    metrics = metric_set(accuracy)\n  )\n\n# plot the models\nmultiple_models %&gt;%\n  autoplot()\n\n# select best parameter\n# NOTE: parsimony is irrelevant\nbest_param &lt;- multiple_models %&gt;%\n  select_best(metric = \"accuracy\")\n\n# finalize model\nfinal_model &lt;- model_wf %&gt;%\n  finalize_workflow(best_param)\n  fit(data = sample_data)\n```\n\n\nClassification Trees\nPredict outcome from a series of yes/no questions.\nRecursive binary splitting algorithm:\n\nStart with all the data\nCreate the best binary split\n\n\nMinimizing Gini index (\\(G = p_1(1 - p_1) + \\dots\\)) -\nMaximizing node homogeneity\n\n\nRepeat 2 until (pruning steps = tuning parameters)\n\n\nReach max depth (# of splits from root to leaf)\nMin sample size in each node\nCost complexity \\(\\alpha\\) (like \\(\\lambda\\) for lasso) a. \\(\\alpha = 0\\) no penalty b. \\(\\alpha \\gg\\) only make split if very useful\n\nPro:\n\nMore insight into relationship\nEager learners - can use a tree to classify all new points\n\nCon:\n\nGreedy\nComputationally intesive\n\n\nNote: KNN and Trees are equal when \\(\\alpha = \\infty\\) and \\(K = N\\)\n\n```{r}\n#| message: false\n#| warning: false\n#| eval: false\n\n# Ensure outcome is categorical\nsample_data &lt;- sample_data %&gt;% \n  mutate(y = as.factor(y))\n\n# Create classification tree classification model specification \nmodel_spec &lt;- decision_tree() %&gt;%\n  set_mode(\"classification\") %&gt;%\n  set_engine(engine = \"rpart\") %&gt;%\n  set_args(min_n = 2, tree_depth = 30, cost_complexity = tune())\n\n# Make data recipe\n# NOTE: preprocessing not absolutely necessary\ndata_rec &lt;- recipe(y ~ x, data = sample_data)\n\n# Create model workflow\nmodel_wf &lt;- workflow() %&gt;%\n  add_recipe(data_rec) %&gt;%\n  add_model(model_spec)\n\n# Cross-validate\nmultiple_models &lt;- model_wf %&gt;%\n  tune_grid(\n    grid = grid_regular(\n      cost_complexity(range = c(-5, 2)),  # log10 scale\n      levels = 10\n    ),\n    resamples = vfold_cv(sample_data, 10),\n    metrics = metric_set(accuracy)\n  )\n\n# plot the models\nmultiple_models %&gt;%\n  autoplot()\n\n# select best parameter\nbest_param &lt;- multiple_models %&gt;%\n  select_best(metric = \"accuracy\")\n\n# select parsimonious parameter\nparsimonious_param &lt;- multiple_models %&gt;%\n  select_by_one_std_err(metric = \"accuracy\", desc(cost_complexity))\n\n# finalize model\nfinal_model &lt;- model_wf %&gt;%\n  finalize_workflow(parsimonious_param)\n  fit(data = sample_data)\n```"
  },
  {
    "objectID": "courses/ML/index.html#bagging-and-random-forests",
    "href": "courses/ML/index.html#bagging-and-random-forests",
    "title": "Machine Learning Notes - Adapted from Macalester’s STAT 253 SP25 Course by Brianna Heggeseth",
    "section": "Bagging and Random Forests",
    "text": "Bagging and Random Forests\nIdea:\n\nBuild a bunch of trees with high variance and low bias (unpruned)\nAverage results to get 1 tree\n\nBoth bagging and random forests are examples of ensemble methods: combining outputs of multiple ML algorithms\n\nIn general: low variability; more stable predictions\n\n\nBagging\nBootstrap aggregation (bagging):\n\nEach tree is created from a resampling with replacement\n~2/3 of original data will show up in resample, ~1/3 will not\nAll \\(p\\) predictors are considered for each split\nUse resample to train, and remaining to test (out of bag error)\n\nForest = many unpruned tress from slighly different datasets (bootsrapping/resampling)\nOverall prediction is from the combined prediction across all trees\n\nClassification: Majority rules\nRegression: Averages\n\n```{r}\n#| message: false\n#| warning: false\n#| eval: false\n\n# Ensure outcome is categorical\nsample_data &lt;- sample_data %&gt;% \n  mutate(y = as.factor(y))\n\n# Create bagging classification model specification \nmodel_spec &lt;- rand_forest() %&gt;%\n  set_mode(\"classification\") %&gt;%\n  set_engine(engine = \"ranger\") %&gt;%\n  set_args(\n    mtry = NULL, \n    min_n = 2, \n    trees = 500, \n    probability = FALSE, \n    importance = \"impurity\")\n\n# Make data recipe, preprocessing steps aren't absolutly necessary\ndata_rec &lt;- recipe(y ~ x, data = sample_data)\n\n# Create model workflow\nmodel_wf &lt;- workflow() %&gt;%\n  add_recipe(data_rec) %&gt;%\n  add_model(model_spec)\n\n# NOTE: no tuning needed - OOB estimation instead\n\n# finalize model\nfinal_model &lt;- model_wf %&gt;%\n  fit(data = sample_data)\n```\n\n\nRandom Forest\nAt each split in the tree, randomly select and consider only a subset of predictors\n\nTypical values are \\(p/2\\) and \\(\\sqrt{p}\\)\n\nPros:\n\nLow bias, low variance (maintine bias from trees, but reduce variance)\nLess computationally intesive (only consider a subset of predictors) compared to bagging\nLess greedy (surrogates get a chance to shine)\nDecorrelate trees (random subset of predictors)\n\nCons:\n\nComputationally expensive\nCan’t plot results, lose interpretability\n\n\nNote: A forest is the best algorithm for reducing variance.\n\n```{r}\n# The only thing you have to change for random forest from bagging code is model specification\n# Create random forest classification model specification \nmodel_spec &lt;- rand_forest() %&gt;%\n  set_mode(\"classification\") %&gt;%\n  set_engine(engine = \"ranger\") %&gt;%\n  set_args(\n    mtry = ___, # number of predictors to consider at each split\n    min_n = 2, \n    trees = 500, \n    probability = FALSE, \n    importance = \"impurity\")\n```"
  },
  {
    "objectID": "courses/astrophysics/Exam2.html",
    "href": "courses/astrophysics/Exam2.html",
    "title": "Astrophysics Exam 2 Revision",
    "section": "",
    "text": "Problem 1\n\nWhat is convection?\nIn our current models of stellar structure, how is it decided whether a particular zone within a stellar interior is convective or not? Be as descriptive and quantitative as possible.\nWhere is convection important in the Sun, and why?\nWhere is convection important in higher mass stars, and why?\n\n\nOriginal Answer (7/10):\n\nConvection is mass flow of particles that travel in a group at approximately the same speed.\nTemperature gradient. If the actual temperature gradient is greater than the adiabatic temperature gradient, then convection will occur.\nConvection happens in the outer most region from \\(R=0.714 R_\\odot\\) to \\(1R_\\odot\\). This region is imporant because convection causes B-field lines and sunspots and the differential rotation causes these B-field lines to flip every 11 years. We primary care about convection because it influenced B-field lines which can cause solar activity that directly affect Earth.\nConvection is important everywhere in higher mass stars becase they are so hot that they need convection to transport energy. We want to understand convection in stars because they produce heavy elements and the ISM.\n\nRevised Answer (10/10): Other than part c), I would reword my answers slightly to the following:\n\nConvection describes the energy transport process when energy is moved in large flows or currents.\nOur current models for stellar evolution predict a zone will be convective if the temperature gradient in that region is greater than the adiabatic temperature gradient.\nSame as original answer.\nHigher mass stars undergo the CNO cycles which, due to the cycle’s large temperature dependence, encourages energy to leave the core via convection. This convection allows higher mass stars to be more efficient mixers of elements, prolonging their lives on the main sequence.\n\nGiven that most of my final answers are rewordings of my original, I would give myself a 7/10 for my original work on this problem.\n\n\n\nProblem 2\nConsider the dense core of a molecular cloud. This inner core has an average mass density of \\(1.6\\times10^{-17}\\) kg m\\(^{-3}\\), a total mass of 11.2 Solar masses, and a mean molecular weight of \\(\\mu = 2.1\\). Assume the temperature is 10 K.\n\nWhat is the free-fall timescale in years?\nWhat is the Jeans’ length in pc?\nWhat is the Jeans’ Mass in solar masses?\nWhat is the radius of the cloud?\nBased on these calculations, what do you expect to hapen to this cloud? E.g., is it stable or unstable, and what does that mean?\n\n\nOriginal Answer (7/10):\n\n\\(t_{ff} = \\left(\\frac{4\\pi}{32}\\frac{1}{G\\rho_0}\\right)^{1/2} = \\left[(0.2945)(9.366\\cdot10^{26})\\right]^{1/2} = 1.66\\cdot10^{13}\\) s \\(\\longrightarrow\\) to yr\n\\(R_J = \\left(\\frac{15kT}{4\\pi G\\mu m_H \\rho_0}\\right)^{1/2} = \\left(\\frac{2.07\\cdot10^{-21}}{4.705\\cdot10^{-53}}\\right) = 6.6329\\cdot10^{15}\\) m \\(\\longrightarrow\\) to pc\n$M_J = (){3/2}(){1/2} = $\n\\(R = \\left(\\frac{3M}{4\\pi\\rho_0}\\right)^{1/3}\\)\ncollapse if \\(M &gt; M_J\\)\n\nRevised Answer (10/10): For most of the calculations on this exam, I was able to set up the problem and plug in the numbers, but I was not able to solve for the final value. Specifically for parts a) and b) of this question, however, I was able to derive an equivalent final value, just not converted to the final units asked for in the problem. The code chunks below complete the calculations I was not able to accomplish during the exam. Given that the cloud mass is larger than the Jeans’ Mass and the clouds length is larger than Jeans’ length, we expect this cloud to collapse.\n\n\nimport astropy.units as u\nimport astropy.constants as c\nimport numpy as np\n\n# define given values\nrho0 = 1.6E-17 * u.kg / u.m ** 3\nM = 11.2 * u.M_sun\nmu = 2.1\nT = 10 * u.K\nm_H = c.m_p\n\n# a)\nt_ff = (3 * np.pi / (32 * c.G * rho0)) ** 0.5\nprint(f\"free-fall timescale: {t_ff.to(u.yr):.2e}\")\n\n# b)\nR_J = (15 *c.k_B * T / (4 * np.pi * c.G * mu * m_H * rho0)) ** 0.5\nprint(f\"Jeans' length: {R_J.to(u.pc):.2f}\")\n\n# c)\nM_J = (5 * c.k_B * T / (c.G * mu * m_H)) ** (3/2) * (3 / (4 * np.pi * rho0)) ** 0.5\nprint(f\"Jeans' mass: {M_J.to(u.M_sun):.2f}\")\n\n# d)\nR = (3 * M / (4 * np.pi * rho0)) ** (1/3)\nprint(f\"Radius of cloud: {R.to(u.pc):.2f}\")\n\nfree-fall timescale: 5.26e+05 yr\nJeans' length: 0.21 pc\nJeans' mass: 9.82 solMass\nRadius of cloud: 0.22 pc\n\n\n\nI knew what equations to use for my original answers and I was able to plug in the right values to derive the correct result. The only things I wasn’t able to accomplish on this problem was calculating parts c), d), and e), and converting units. If I had more time/was more proficient at typing values into the handheld calculator, I would have been able to complete this problem as I understood the process behind each question, thus, I would give myself a 7/10 for my original answer.\n\n\n\nProblem 3\nThe plot below shows the Jeans stability criterion, with mass plotted as a function of density. Two individula clouds, labeled “Cloud A” and “Cloud B”, are shown. You man assume that each cloud has the same temperature and the same composition.\n\nIdentify if one, both, or neither of clouds would be considered stable against gravitational collapse. Explain your answer.\nWhat is the radius of cloud A?\nWhat is the radius of cloud B?\n\n\nOriginal Answer (8/10):\n\nA cloud collapses if \\(M_c &gt; M_J\\), thus we expect the green cloud (Cloud A) to collapse while the blue dot (Cloud B) would not.\n\\(R_A = \\left(\\frac{3M}{4\\pi\\rho}\\right)^{1/3} = \\left(\\frac{3\\cdot13\\cdot1.99\\cdot10^{30}}{4\\pi\\cdot10^{-17}}\\right)^{1/3} = 4.98\\cdot10^{15}\\) m\n\\(R_B = \\left(\\frac{3M}{4\\pi\\rho}\\right)^{1/3} = \\left(\\frac{3\\cdot9\\cdot1.99\\cdot10^{30}}{4\\pi\\cdot5\\cdot10^{-17}}\\right)^{1/3} = 4.406\\cdot10^{15}\\) m\n\nRevised Answer (10/10): My original answer for a) is correct. If the purple line shows the Jeans stability criterion with mass on the y axis, then any points that fall below the line would have masses less than the Jeans mass, and therefore be stable from collapse. If any points were above the line, then the cloud would have a mass greater than the Jeans mass and collapse as a result. In other words, Cloud A would collapse and Cloud B would not.\nAs the code chunk below shows, I had the right order of magnitude but slightly different answers for part b) and c). This discrepancy is due to a calculation error in my original work: I switched the masses of the clouds and incorrectly estimated the densities from the graph.\n\n\n# define values given in problem\nM_A = 9 * u.M_sun\nrhoA = 6E-17 * u.kg / u.m ** 3\nM_B = 13 * u.M_sun\nrhoB = 2E-17 * u.kg / u.m ** 3\n\n# b)\nR_A = (3 * M_A / (4 * np.pi * rhoA)) ** (1/3)\nprint(f\"Radius of Cloud A: {R_A.to(u.m):.2e}\")\n\n# c)\nR_B = (3 * M_B / (4 * np.pi * rhoB)) ** (1/3)\nprint(f\"Radius of Cloud B: {R_B.to(u.m):.2e}\")\n\nRadius of Cloud A: 4.14e+15 m\nRadius of Cloud B: 6.76e+15 m\n\n\n\nSince my errors for parts b) and c) were only computation errors, I would give myself an 8/10 for my original work.\n\n\n\nProblem 4\nA Source has a luminosity of \\(6\\times10^{13}\\) watts. You observe this source from a distance of 6.25 km. The intervening material has a density of 0.012 kg per cubic meter and an opacity of 0.02 m\\(^2\\) kg\\(^{-1}\\).\n\nWhat is the optical depth of the medium?\nIn the absence of extinction, what is the measured flux in W/m\\(^2\\)?\nIn the presence of extinction, what is the measured flux in W/m\\(^2\\)?\n\n\nOriginal Answer (7/10):\n\n$_= _0^sds = s = (0.02)(0.012)(6.25^3) = $\n$F = = = $\n\\(m_\\lambda - m_{\\lambda,0} = 1.086 \\tau_\\lambda = -2.5\\log_{10}\\left(\\frac{F}{F_{\\lambda,0}}\\right)\\) solve for F?\n\nRevised Answer (10/10): I set up the problem correctly for parts a) and b) in my original answer, and I was going down the right path in part c), however, I did not calculate a final answer. The code chunk below calculates the final answers. Note that for part c), we had to rearrange\n\\[1.086 \\tau_\\lambda = -2.5\\log_{10}\\left(\\frac{F}{F_{\\lambda,0}}\\right)\\]\nto solve for \\(F\\). Another valid way to estimate \\(F\\) is under the relation\n\\[I = I_0 e^{-\\tau}\\]\nand substituting in \\(F\\) and \\(F_0\\) for \\(I\\) and \\(I_0\\), respectively.\n\n\n# define variables\nL = 6E13 * u.W\nd = 6.25 * u.km\nrho = 0.012 * u.kg / u.m ** 3\nkappa = 0.02 * u.m ** 2 / u.kg\n\n# a)\ntau_l = kappa * rho * d\nprint(f\"optical depth: {tau_l.to(u.dimensionless_unscaled)}\")\n\n# b)\nF_0 = L / (4 * np.pi * d ** 2)\nprint(f\"flux (no extinction): {F_0.to(u.W / u.m ** 2):.2e}\")\n\n# c)\nF = F_0 * 10 ** (1.086 * tau_l / -2.5)\nF_alt = F_0 * np.exp(-tau_l)\nprint(f\"flux (with extinction): {F.to(u.W / u.m ** 2):.2e}\")\nprint(f\"flux (with extinction, alt. method): {F_alt:.2e}\")\n\noptical depth: 1.5\nflux (no extinction): 1.22e+05 W / m2\nflux (with extinction): 2.73e+04 W / m2\nflux (with extinction, alt. method): 2.73e+10 W / km2\n\n\n\nBecause I had the correct process for the majority of the problems, and I just didn’t have enough time to enter the final numbers into the calculator, I would give myself a 7/10 for my original answer.\n\n\n\nProblem 5\nThe plot below shows extinction in magnitudes as a function of wavelength along the sightlines to three objects, labeled “A”, “B”, and “C”. The individual points represent individual measurements in specific filters; this is real data and there is uncertainty in the measurements. Assume distances to each object as follows: \\(D_A = 611\\) kpc; \\(D_B = 6.2\\) Mpc; \\(D_C = 2.35\\) Mpc.\n\nWhich sightline has the largest extinction?\nWhich sightline experiences the smallest extinction?\nA star with absolute magnitude -2.47 is observed at 800 nm in each of the objects. What are the apparent magnitudes of each star, “A”, “B”, “C”?\n\n\nOriginal Answer (8/10):\n\nC has the highest extinction across all \\(\\lambda\\)\nA has the smallest extinction across all \\(\\lambda\\)\nWould need to calculate \\(m_\\lambda\\) and \\(m_\\lambda - m_{\\lambda,0} = A_\\lambda = 1.068 \\tau_\\lambda\\), so would either need to know unextinct values (\\(m_{\\lambda,0}\\)) or \\(\\tau_\\lambda\\implies \\kappa, \\rho\\)\n\nRevised Answer (10/10): The extiction of an object is \\(A_\\lambda\\), thus, my answers for a) and b) still hold; C has the highest extiction (\\(A_\\lambda\\)) across all wavelengths and A has the lowest extinction across all wavelengths. The first sentence of part c) was commented out when the test was passed out, so the code chunk below calculates the apparent magnitudes for the three stars. Note that the \\(A_\\lambda\\) values were estimated from the plot at \\(\\lambda = 800 \\text{ nm } = 0.8 \\text{ micron}\\).\n\n\n# define variables\nD_A = 611 * u.kpc\nD_B = 6.2 * u.Mpc\nD_C = 2.35 * u.Mpc\nA_A = 0.6\nA_B = 1.6\nA_C = 2.4\nM = -2.47\n\n# c)\nm_A = M + 5 * np.log10(D_A.to(u.pc).value) - 5 + A_A\nm_B = M + 5 * np.log10(D_B.to(u.pc).value) - 5 + A_B\nm_C = M + 5 * np.log10(D_C.to(u.pc).value) - 5 + A_C\nprint(f\"m_A: {m_A:.2f}\")\nprint(f\"m_B: {m_B:.2f}\")\nprint(f\"m_C: {m_C:.2f}\")\n\nm_A: 22.06\nm_B: 28.09\nm_C: 26.79\n\n\n\nGiven that we were missing some of the question in the exam, I would give myself a 8/10 for the original version of this problem as I knew we were missing something, but I didn’t mention we were missing the absolute magnitude directly.\n\n\n\nProblem 6\nWhat is something in 2025 that you are proud of?\n\nOriginal/Revised Answer: I published a Research Note to the AAS.\n\n\n\nProblem 7\nConsider the following plot, which shows the hypothetical Macalester initial mass function (IMF). This differs in significant ways from the Salpeter IMF in that the Macalester IMF has different slopes in different mass ranges; the different colors label the different slopes, and the vertical dashed lines show the positions of the changes. In contrast, the Salpeter IMF has a constant \\(\\gamma = -2.35\\) over all masses. Compare these IMFs under the assumption that the star-forming environments are identical.\n\nWhich IMF predicts an higher efficiency of formation of the most very massive stars?\nWhich IMF results in the production of more low-mass stars?\nDescribe the pros and cons of each model with respect to their potential of accurately predicting the distribution of stars formed when a modelular cloud collapses.\n\n\nOriginal Answer (9/10):\n\nGiven the Salpeter intersects at red-blue region, the Mac IMF produces a higher efficiency of more massive stars\nFor the same rational as above, the Salpeter IMF predicts more low mass stars\nBoth are potentially valid IMFs, but the Macalester one might be more applicable due to its piecewise nature.\n\nRevised Answer (10/10): I would maintain the same answers for parts a) and b), but I would revise my answer for part c) to the following: Both models could potentially describe the number of stars found across the range of stellar masses, but, as parts a) and b) have shown, it is possible that either model over/underestimates the production of low/high-mass stars. Additionally, the piecewise nature of the Macalester IMF might be more applicable, especially given the new papers (shown in class) that have captured the turnover of the IMF.\nI would give my original answer a 9/10, as I feel I should have elaborated more on part c).\n\n\n\nProblem 8\nConsider an individual radial zone of a 1 Solar mass stellar model (i.e., a model of the Sun). This zone covers a narrow range of radii and thus enables a plane-parallel approximation of physical parameters. The mass contained in this zone is 0.9% of the total mass and the position of the zone is at 61% of the toal radius. Adopt a mean molecular weight that is appropriate for ionized gas, \\(\\mu = 0.754\\). Assume that convection is the primary method of energy transport, and that the gas can be adequately described by the ideal gas law. What is the temperature gradient across this region, in units of Kelvin per meter?\n\nOriginal Answer (7/10):\n\\[\\frac{dT}{dr} = -\\left(1 - \\frac{1}{\\gamma}\\right)\\frac{\\mu m_H}{k}\\frac{GM_r}{r^2} = -(1-\\frac{1}{5/3})\\frac{(0.754)(1.67\\cdot10^{-27}\\text{ kg})}{(1.38\\cdot10^{-23}\\text{ J/K})}(6.67\\cdot10^{-11}\\frac{\\text{Nm}^2}{\\text{kg}^2})\\cdot\\left(\\frac{0.9\\cdot1.99\\cdot10^{30}\\text{ kg}}{(0.61\\cdot6.95\\cdot10^{8}\\text{ m})^2}\\right)\\]\nRevised Answer (10/10): I wrote down the equation and substituted in the given values in my original answer, but I didn’t have enough time to simplify to a final answer, like I do in the code chunk below. For this reason, I would give myself a 7/10 for my original answer.\n\n\n# define variables\nM_r = 0.9 * u.M_sun\nR = 0.61 * u.R_sun\nmu = 0.754\ngamma = 5/3\n\n# calculate convection temperature gradient\ntempgrad = -(1 - 1/gamma) * (mu * m_H * c.G * M_r) / (c.k_B * R ** 2)\nprint(f\"temperature gradient: {tempgrad.to(u.K / u.m):.4f}\")\n\ntemperature gradient: -0.0242 K / m\n\n\n\n\nProblem 9\n\nDescribe the different modes of fusion that occur in stars on the main sequence.\nWhich mode of fusion is more important in higher mass stars than in lower mass stars, and why?\nThe Sun is believed to be more luminous now that when it first arrrived on the main sequence. Explain why.\n\n\nOriginal Answer (8/10):\n\nIn MS stars, hydrogen is fusing to helium in the core, but the process by which it happens could differ depending on the mass of the star. For moderate to low mass stars, like the Sun, the core is fusing through radiation, while in high and low mass stars, the core is fusing through convections.\nHigher mass stars have fusion through convection in their core because they are so much more hotter, so the most efficient energy transport mechanism is through convection. Convection allows for the CNO cycle to take place as well, which can help produce helium more efficiently than through the radiative p-p chain.\nThe Sun is more luminous than when it first arrived on the MS because its composition has changed. He is now the dominant element in the core, which means the core’s mean molecular weight has increased, causing contraction and subsequent temperature increase.\n\nRevised Answer (10/10): I would revise my answers to the following.\n\nIn MS stars, hydrogen is fusing to helium in the core, but the process by which fusion occurs differs depending on the mass of the star. For moderate to low mass stars, like the Sun, the core is fusing through radiation, while in high and very low mass stars, the core is fusing through convections.\nHigher mass stars have fusion through convection in their core because they have extremely high temperatures, which causes the more efficient energy transport mechanism, convection, to take over. Convection allows for the CNO cycle to take place as well, which can help produce helium more efficiently than through the radiative p-p chain at the high mass star’s given temperature. Additionally, convection allows a more efficient mixing of elements in the star, which extends the lifetime of the star as it is able to use hydrogen and helium that are not just in the nearest regions to the core.\nThe Sun is more luminous than when it first arrived on the MS because its composition has changed. He is now the dominant element in the core, which means the core’s mean molecular weight has increased, causing contraction and subsequent temperature increase.\n\nGiven my revisions primarily elaborated on ideas already expressed in my original answer, I would give my original answers an 8/10.\n\n\n\nProblem 10\nConsider the evolutionary path shown in the HR diagram below.\n\nWhat mass star is shown in this evolutionary tract?\nDescribe what is happening between each letter.\n\n\nOriginal Answer (10/10):\n\nGiven the slope of the horizontal branch, this is likely a lower mass star \\(\\sim1M_\\odot\\).\n\nStar is in MS, burning H to He. (b) H core exhausted, H-shell stars to burn, start of subgiant branch: He core contracts, core temp increases, envelope expands, \\(T_{eff}\\) decreases, He ash falls on core, core contracts, cycle repeats till S-C limit. (c) S-C limit reached, start of red giant branch, convection begins near surface growing inward, we get our first dredge up of materials (can see \\(^3_2\\)He and \\(^14_7\\)N while C and lithium move in). (d) He core flash: He core has become more \\(e^-\\) degenerate, neutrino loss in core causes temperature inversion, \\(3\\alpha\\) process starts and is nearly explosive, He shell activated, core joins, temp inversion removed and interior is as luminous as galaxy for short time, but outer layers absorb energy. (e) After He core flash, star temp is increasing and luminosity decreasing, and we begin the horizontal branch, blueward. Envelope is contracting and we have convection in core and envelope. Blue motion is analogous to H fusion in MS, just with He. At bluest point, \\(\\mu\\) is increasing and the core contracts, envelope exands and cools, moving redward. Eventually He core is exhausted and CO core continues to contract. He shell narrows, temperature increases, layers expand, cooling (pulsations). H shell turns off temporarily, CO core contracts, neutrino production increases, core temperature decreases. (e-to-f) We get to early asymptotic giant branch: He shell burns like H-shell in RGB and the envelope absorbs initially, then convection causes a second dredge up. The H shell turns back on, He shell turns off/on again and again through similar process to He core flash (i.e. ash from H shell) and \\(e^-\\) degenerate core causes based for shell to expand and repeat the process in the thermal pulse AGB phase. (f-to-g) Mass loss prevents collapse of star, core makes additional elements, we can get superwind, eventually we loose enough mass that the envelope form superwind is optically thin and the remnant degenerate core is revealed (but that isn’t show in the plot).\n\n\nRevised Answer (10/10): After checking in the book, I think I could have revised by answer to a) to say something about it being a 1-5\\(M_\\odot\\) star, but that is just extra clarification that isn’t too necessary. For that reason, I would give myself a 10/10 for my original answer to this problem.\n\n\n\nProblem 11\nHow would the evolutionary tract change if the star was 5-10 times more massive than the star shown in the HR diagram above? Provide as much detail as possible, again commenting on what would be similar or different between each letter.\n\nOriginal Answer (7/10): If stars were more massive, we would expect no He core flash, and the horizontal branch would appear more horizontal. We’d also get a 3rd dredge up in the thermal pulse AGB and a more flat subgiant branch.\nRevised Answer (10/10): Given that we infer the star to be around 1 solar mass, this question is asking about the stellar evolution of a ~5-10 solar mass star. I would argue that my original answers hold, but they only touched on the differences as the rest of the evolution of a ~5-10 solar mass star is quite similar to that of a 1 solar mass star. Directly copying the description of stellar evolution from Problem 10 to replace a few phrases was too time consuming at the time of the exam, but I do so now below.\n\nStar is in MS, burning H to He. (b) H core exhausted, H-shell stars to burn, start of subgiant branch: He core contracts, core temp increases, envelope expands, \\(T_{eff}\\) decreases, He ash falls on core, core contracts, cycle repeats till S-C limit. (c) S-C limit reached, start of red giant branch, convection begins near surface growing inward, we get our first dredge up of materials (can see \\(^3_2\\)He and \\(^14_7\\)N while C and lithium move in). (d-to-e) No He core flash, rather a more He core brning. Star temp is increasing and luminosity decreasing, and we begin the horizontal branch, blueward. Envelope is contracting and we have convection in core and envelope. Blue motion is analogous to H fusion in MS, just with He. At bluest point, \\(\\mu\\) is increasing and the core contracts, envelope exands and cools, moving redward. Eventually He core is exhausted and CO core continues to contract. He shell narrows, temperature increases, layers expand, cooling (pulsations). H shell turns off temporarily, CO core contracts, neutrino production increases, core temperature decreases. (e-to-f) We get to early asymptotic giant branch: He shell burns like H-shell in RGB and the envelope absorbs initially, then convection causes a second dredge up. The H shell turns back on, He shell turns off/on again and again through similar process to He core flash (i.e. ash from H shell) and \\(e^-\\) degenerate core causes based for shell to expand and repeat the process in the thermal pulse AGB phase. Convection zones between He shell and H shell combine with convection zones in the envelope and we get our third dredge up, where we are able to see carbon spectroscopically, known as “carbon stars”. (f-to-g) Mass loss prevents collapse of star, core makes additional elements, we can get superwind, eventually we loose enough mass that the envelope form superwind is optically thin and the remnant degenerate core is revealed (but that isn’t show in the plot).\n\n\n\n\nReflection\n\nWhat did you feel the most and least confident about going into the exam?\n\n\nAnswer: After the first exam, I felt most confident about the style of questions to expect and my ability to cover as many questions as possible in the time allowed. I think I did a great job with that, as I recognized question 10 as requiring a lot of writting and thus devoted most of my intial work to writing my answer out. I also felt confident in my ability to understand extinction as I spent an independent study with Jay on the topic.\nI felt least confident in my knowledge of the Sun. Namely, I was unsure what quantitative questions could be asked on the Sun, so I was thinking questions on the topic would be more qualitiative so I refrained from putting much information on the Sun on my equation sheet.\n\n\nWhat did “grading”/“correcting” your exam help you to understand better?\n\n\nAnswer: Most directly, I think grading my exam helped me understand the answers to all the questions I didn’t have time to calculate, and specifically part c) of Problem 5 which I didn’t fully understand when I took the exam. More indirectly, I think grading my exam helped me solidify my understanding of the Jeans criterion and the initial mass function. As with the last exam, I also solidified my understanding that I am more proficient at calculations with Python than handheld calculators.\n\n\nWhat topics from the second unit do you feel like you still have the most room for improvement?\n\n\nAnswer: I think I have the most room for improvement on the physics during the stages of stellar evolution. My equation sheet had the entire stellar evolution process written out for each stage and a corresponding stellar evolution HR diagram for both low and moderate mass stars. The information for the unit is extremely dense and understanding it is vital because it quite literally describes how stars evolve, and a better understanding of how stars evolves improves our understanding of galaxies and larger structures. All of that is to say, I found remembering concepts from the stellar evolution section difficult because of how dense the section is.\n\n\nIf 10 pts per problem (except problem 6), what would your original grade be versus the version you’re turning in now?\n\n\nAnswer: Excluding problem 6, I would have received a 78/100. With revisions, I believe I have corrected my exam to around 100/100."
  },
  {
    "objectID": "courses/honors/index.html",
    "href": "courses/honors/index.html",
    "title": "Topology Final Project",
    "section": "",
    "text": "Ellaborate/explain each section in more detail\nCompute persistent image\nConvert persistent image to vectors\nPerform clustering of persistent features using K-means and/or Hierarchical clustering\nLook into PCA/PCR for potential clusterings??\nGet redshifts for each galaxy"
  },
  {
    "objectID": "courses/honors/index.html#astronomy",
    "href": "courses/honors/index.html#astronomy",
    "title": "Topology Final Project",
    "section": "Astronomy",
    "text": "Astronomy\n\nWhat is a gravitationally lensed galaxy?\nWhy do we care about them?"
  },
  {
    "objectID": "courses/honors/index.html#persistent-homology",
    "href": "courses/honors/index.html#persistent-homology",
    "title": "Topology Final Project",
    "section": "Persistent Homology",
    "text": "Persistent Homology\n\nWhat is it?\nHow is it helpful?\nHow has it been used in astronomy before?\nWhat do I plan"
  },
  {
    "objectID": "courses/honors/index.html#machine-learning",
    "href": "courses/honors/index.html#machine-learning",
    "title": "Topology Final Project",
    "section": "Machine Learning",
    "text": "Machine Learning\n\nWhat is machine learning?\nWhy do we need/want to perform clustering?\nHow do the clustering algorithms work and what are they?"
  },
  {
    "objectID": "courses/astrophysics/PS16.html",
    "href": "courses/astrophysics/PS16.html",
    "title": "Astrophysics PS16",
    "section": "",
    "text": "Problem 1\nAssume that the 1.1 Solar mass core of a star with a zero age main sequence mass of 13 Solar masses collapses in a type II supernova event. Assume that 100% of the energy released by the collapsing core is converted into neutrinos, and that 2.5% of the neutrinos are absorbed by the overlying layers in order to power the ejection of the remnant. Here you will estimate the radius of the collapsed core remnant if sufficient energy is liberated to just barely eject the remaining non-core mass to a distance of infinity. Use values for this supergiant star from Appendix G of the text.\n\nWhat is a reasonable initial radius for the 1.1 Solar mass core? Justify your choice.\nUsing the radius you described in part a), what is the radius of the collapsed core remnant? –&gt; NS from WD radius\nCompare the value in b) to size of the compact core remaining from type II SNe. Does it seem reasonable? Why or why not?\n\n\nAnswer: All stars less than 8 solar masses evolve to white dwarfs. Thus, before our 13 ZAMS star undergoes core collapse, we would expect the uncollapsed core to be electron degenerate and have a radius on the order of that of a white dwarf of similar mass. In this case, our 1.1 Solar mass core that we are interpreting as a white dwarf would have a radius around that of the radius of the Earth.\nFor part b) we know that the total energy to eject the material is 2.5% of the change in gravitational potential energy of the core:\n\\[E_{eject} = 0.025 \\Delta E_c\\]\nIf we expand the equation, we get the following:\n\\[\\frac{GM_cM_e}{r_{avg}} = 0.025\\left(\\frac{GM_c^2}{r_f} - \\frac{GM_c^2}{r_i}\\right)\\]\nwhich, solving for \\(r_f\\), simplifies to\n\\[r_f = \\frac{0.025 r_{avg} M_c r_i}{M_e r_i + 0.025 r_{avg} M_c}\\]\nThe code chunk below estimates \\(r\\) to approximately 6000 km, which is 2 orders of magnitude larger than what we expect for a neutron star (~10 km).\n\n\nimport astropy.units as u\nimport astropy.constants as c\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nr_avg = 78 * u.R_sun\nr_i = 1 * u.R_earth\nM_star = 13 * u.M_sun\nM_c = 1.1 * u.M_sun\nM_e = M_star - M_c\n\nr_f = 0.025 * r_avg * M_c * r_i / (M_e * r_i + 0.025 * r_avg * M_c)\nprint(r_f.to(u.km))\n\n6069.401274017802 km\n\n\n\n\nProblem 2\nImagine that the energy released during the decay of a particular radioactive species is 2.89 MeV. If 0.057 Solar masses of this species is produced in a SN event, and if this species has a mass of 56 atomic mass units and a radioactive half-life of 88.8 days, then calculate the following quantities:\n\nThe total number of atoms of this species\nThe decay constant of this species\nThe number of decays per second\nThe luminosity of the remnant immediately after the SN event in Solar luminosities\nThe luminosity of the remnant 1 year after the SN event in Solar luminosities\nThe amount of time required for the remnant to fade by 6.191 magnitudes\n\n\nAnswer: The code chunk below calculates the answer to each question.\n\n\nM_net = 0.057 * u.M_sun\nm_amu = 56 * u.u\nE_amu = 2.89 * u.MeV\nhalf_life = 88.8 * u.d\n\n# a)\nn_atoms = M_net / m_amu\nprint(f\"a) total number of atoms: {n_atoms.to(u.kg / u.kg):.2e} atoms\")\n\n# b)\ndecay_const = np.log(2) / half_life\nprint(f\"b) decay constant: {decay_const:.2e}\")\n\n# c)\nprint(f\"c) num decays/sec: {decay_const.to(1 / u.s):.2e}\")\n\n# d)\nL = E_amu * decay_const * n_atoms \nprint(f\"d) L (init): {L.to(u.L_sun):.2e}\")\n\n# e)\nnew_amount = n_atoms * np.exp(-decay_const * 1 * u.yr)\nL_yr = E_amu * decay_const * new_amount\nprint(f\"e) L (1yr): {L_yr.to(u.L_sun):.2e}\")\n\n# f)\nT = np.log(100 ** (6.191/5)) / decay_const\nprint(f\"f) Time to fade 6.191 mag: ~{T.to(u.yr):.2f}\")\n\na) total number of atoms: 1.22e+54 atoms\nb) decay constant: 7.81e-03 1 / d\nc) num decays/sec: 9.03e-08 1 / s\nd) L (init): 1.33e+08 solLum\ne) L (1yr): 7.70e+06 solLum\nf) Time to fade 6.191 mag: ~2.00 yr\n\n\n\n\nProblem 3\nIndividual “A” stands (miraculously and unphysically) on the surface of the more massive neutron star that gave rise the GW170817 event. Individual “B” is in a starship located 0.5 AU away from the neutron star; there is no relative motion between the starship and the neutron star.\n\nIf one hour of time elapses for individual “A”, how much time elapses for individual “B”?\nThinking that one hour is quite enough time to decide that the surface of a neutron star is a very unpleasant place, individual “A” sends an electromagnetic plea for help to individual “B”. This message is broadcast by individual “A” at the rest wavelength of the Hydrogen Balmer alpha transition. To what wavelength (in nm) should individual “B” tune their receiver in order to receive this message?\n\n\nAnswer: The code chunk below calculates the values for part a) and b). Note that a radius \\(r_0=10\\) km was assumed as that is the typcially accepted value of a neutron star. For both parts, the following equation was used:\n\\[\\frac{\\Delta t_0}{\\Delta t_\\infty} = \\frac{\\nu_\\infty}{\\nu_0} = \\left(1 - \\frac{2GM}{r_0 c^2}\\right)^{1/2}\\]\nwhere the 0 and \\(\\infty\\) index indicate individual “A” and “B”, respectively.\nNote that for part b), we can solve for \\(\\lambda\\) by \\(c=\\lambda\\nu\\), which adds the following relation to our equation above.\n\\[\\frac{\\lambda_0}{\\lambda_\\infty} = \\frac{\\Delta t_0}{\\Delta t_\\infty} = \\frac{\\nu_\\infty}{\\nu_0} = \\left(1 - \\frac{2GM}{r_0 c^2}\\right)^{1/2}\\]\n\n\nr0 = 10 * u.km  # radius of the neutron star\nM = 1.48 * u.M_sun\nt_A = 1 * u.hr\n\n# a)\nt_B = t_A / (1 - 2 * c.G * M / (r0 * c.c ** 2)) ** 0.5\nprint(f\"t_B: {t_B}\")\n\n# b)\nlambda_A = 656.28 * u.nm\nratio = t_A / t_B\nlambda_B = lambda_A / ratio\nprint(f\"lambda_B: {lambda_B}\")\n\nt_B: 1.3328370313320161 h\nlambda_B: 874.7142869225755 nm\n\n\n\n\nProblem 4\nThe Event Horizon Telescope has revolutionized our understanding of the regions surrounding supermassive black holes that reside in the dynamical centers of many massive galaxies.\n\nUse the mass of the M87 black hole derived in the manuscript by the Event Horizon Telescope Collaboration (2019) to calculate the Schwarzschild radius of this black hole. How does this compare to the observed “shadow”?\nIt is important to debunk the myth that black holes are furious beasts that devour galaxies. Instead they are rather boring objects that behave like benign point sources unless material ventures within the Schwarzschild radius. To demonstrate this, create a log-log plot of the Schwarzschild radius (y-axis) as a function of the mass of the black hole (x-axis). Allow the mass to range from 1 Solar mass to \\(10^{10}\\) Solar masses.\n\nOn this plot, show the following physical scales with horizontal lines: 1 Earth radius, 1 Solar radius, 1 AU, and 100 AU. Clearly label each line. Plot the position of the M87 black hole on this diagram. Upload this image in the attachments section\n\nAnswer: The code chunk below calculates the Schwarzchild radius of the black hole to be around \\(2.7\\cdot10^4\\) solar radii, and the shadow of the black hole to be around \\(7.59\\cdot10^4\\) solar radii. We expect the shadow to be on the order of the Schwarzchild radius.\nThe code chunk below also creates the desired log-log plot in part b) of the Schwarzchild radius as a function of black hole mass.\n\n\nM87 = 6.5E9 * u.M_sun\ndist87 = 16.8 * u.Mpc\nangDiam87 = 42E-6 * u.arcsec\n\n# a)\nR_s_87 = 2 * c.G * M87 / c.c ** 2\ndiam87 = angDiam87.to(u.rad) * dist87 / u.rad\nrad87 = diam87 / 2\nprint(f\"Schwarzchild raius: {R_s_87.to(u.R_sun):.2e}\")\nprint(f\"Radius of shadow: {rad87.to(u.R_sun):.2e}\")\n\n# b)\nmass = np.linspace(1, 1E10, 1000) * u.M_sun\nR_s = 2 * c.G * mass / c.c ** 2\nplt.plot(mass, R_s.to(u.R_sun))\nplt.axhline((1 * u.R_sun).value, linestyle=\"--\", color=\"orange\", label=\"1 $R_{\\\\odot}$\")\nplt.axhline((1 * u.au).to(u.R_sun).value, linestyle=\"--\", color=\"green\", label=\"1 AU\")\nplt.axhline((100 * u.au).to(u.R_sun).value, linestyle=\"--\", color=\"purple\", label=\"100 AU\")\nplt.plot(M87.to(u.M_sun), R_s_87.to(u.R_sun), 'o', label=\"M87\", )\nplt.legend()\nplt.xlabel(\"Mass [$M_{\\\\odot}$]\")\nplt.ylabel(\"$R_S$ [$R_{\\\\odot}$]\")\nplt.xscale(\"log\")\nplt.yscale(\"log\")\n\nSchwarzchild raius: 2.76e+04 solRad\nRadius of shadow: 7.59e+04 solRad"
  }
]