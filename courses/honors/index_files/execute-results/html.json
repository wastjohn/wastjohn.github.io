{
  "hash": "78572e0fa8c905139e98ddb45fe3a2b4",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Persistent Images of Gravitionally Lensed Galaxies\"\nbibliography: bibliography.bib\ntitle-slide-attributes:\n    data-background-image: https://euclid.caltech.edu/download/AvmImage/58/binary/jpg_original\n\nformat: \n    revealjs:\n        theme: dark\n    \n---\n\n\n# Introduction\nGravitationally lensed galaxies are an active area of research in astronomy as investigating their properties can give insights into gravitational\n\n\n## Astronomy\n- What is a gravitationally lensed galaxy?\n- Why do we care about them?\n\n## Persistent Homology\n- What is it?\n- How is it helpful?\n- How has it been used in astronomy before?\n- What do I plan \n\n## Machine Learning\n- What is machine learning?\n- Why do we need/want to perform clustering?\n- How do the clustering algorithms work and what are they?\n\n# Data\nThe Euclid Space telescope was launched in ___ with the intention of mapping 2/3 of the night sky. On March 19, 2025, the Euclid Collaboration released their Quick Data Release (Q1).\n\n- What data do I have? What does it look like?\n- Where did I get the data from?\n- Who funded the data?  - ESA\n- When was the data collected?\n- Why was the data collected?\n- How do I plan on using the data?\n\nThe code chunk below imports the necessary modules for working with this data.\n\n\n\nOnce all the libraries are imported, we can extract the data. Each lensed galaxy was found via a machine learning classification model, thus there existed a distribution of objects with associated probabilities that they were lensed galaxies, based on the model. Currently, this project only incorporates objects that had a \"grade\" of \"A\" (i.e. were of the best quality).\n\n\n\nThe target list only contains the celestial coordinates of the grade-A lensed galaxies. Luckily, we can download cutouts of the targets. Note, this code chunk is intentially set to not run as all of the cutouts have already been extracted. Note, we have ~250 targets.\n\n\n\nOnce the cutouts are extracted, we can display them so get a sense of what the data actually looks like. The code chunk below shows an example of what a gravitationally lensed galaxy looks like from the Euclid space telescope.\n\n\n\n# Analysis\nOnce we have the images, the next step is to compute the persistent homology for each image. The code chunk below displays the example image using Python, a Giotto-tda heatmap mehtod, and calculates the cubical persistence of the example image.\n\n\n\n## FITS Image\n\n::: {#e17af9dc .cell execution_count=5}\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-revealjs/cell-6-output-1.png){width=518 height=412}\n:::\n:::\n\n\n## Preprocessing\n\n\n\n::: {#3556c63e .cell execution_count=7}\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-revealjs/cell-8-output-1.png){width=510 height=411}\n:::\n:::\n\n\n## Calculate Persistence\n\n::: {#5d206f9c .cell execution_count=8}\n\n::: {.cell-output .cell-output-stdout}\n```\ncalculating cubical persistence (h0) on inverted images...\ncalculating cubical persistence (h1) on images...\n```\n:::\n:::\n\n\n\n\n## Create Persistence Images\n\n\n\n\n\n::: {#8e4dddab .cell execution_count=12}\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-revealjs/cell-13-output-1.png){width=846 height=671}\n:::\n:::\n\n\n\n\n## Convert Original Images to Vectors and Save Both Vectors to a CSV \n\n\n\n## Clustering\n\nHierarchical clustering.\n\n\n# Results and Discussion\n\n\n## Cluster: Natural Images {.center .nonincremental}\n\n![](cluster_natural.png){.fragment width=\"1200\" height=\"600\"}\n\n## Cluster: Persistence Images {.center .nonincremental}\n\n![](cluster_persistent.png){.fragment width=\"1600\" height=\"600\"}\n\n\n## {.center}\n\n![](cluster_persistent.png){.fragment width=\"1600\" height=\"600\"}\n\n# Conclusions\n\n# References\nblah blah [@Chen2015, @Sousbie2011]\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}